// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build.proto

#include "build.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_label_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_label_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Label;
}  // namespace protobuf_label_2eproto
namespace contracts {
namespace v1 {
class BuildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Build>
      _instance;
} _Build_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace protobuf_build_2eproto {
static void InitDefaultsBuild() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::contracts::v1::_Build_default_instance_;
    new (ptr) ::contracts::v1::Build();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::contracts::v1::Build::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Build =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBuild}, {
      &protobuf_label_2eproto::scc_info_Label.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Build.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, repo_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, repo_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, repo_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, repo_branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, repo_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, build_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, build_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Build, labels_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::contracts::v1::Build)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::contracts::v1::_Build_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "build.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013build.proto\022\014contracts.v1\032\013label.proto"
      "\"\251\002\n\005Build\022\n\n\002id\030\001 \001(\t\022\023\n\013repo_source\030\002 "
      "\001(\t\022\022\n\nrepo_owner\030\003 \001(\t\022\021\n\trepo_name\030\004 \001"
      "(\t\022\023\n\013repo_branch\030\005 \001(\t\022\025\n\rrepo_revision"
      "\030\006 \001(\t\022\025\n\rbuild_version\030\007 \001(\t\022\024\n\014build_s"
      "tatus\030\010 \001(\t\022#\n\006labels\030\t \003(\0132\023.contracts."
      "v1.Label\"Z\n\006Corpus\022\r\n\tUNIVERSAL\020\000\022\007\n\003WEB"
      "\020\001\022\n\n\006IMAGES\020\002\022\t\n\005LOCAL\020\003\022\010\n\004NEWS\020\004\022\014\n\010P"
      "RODUCTS\020\005\022\t\n\005VIDEO\020\006b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 348);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "build.proto", &protobuf_RegisterTypes);
  ::protobuf_label_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_build_2eproto
namespace contracts {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Build_Corpus_descriptor() {
  protobuf_build_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_build_2eproto::file_level_enum_descriptors[0];
}
bool Build_Corpus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Build_Corpus Build::UNIVERSAL;
const Build_Corpus Build::WEB;
const Build_Corpus Build::IMAGES;
const Build_Corpus Build::LOCAL;
const Build_Corpus Build::NEWS;
const Build_Corpus Build::PRODUCTS;
const Build_Corpus Build::VIDEO;
const Build_Corpus Build::Corpus_MIN;
const Build_Corpus Build::Corpus_MAX;
const int Build::Corpus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Build::InitAsDefaultInstance() {
}
void Build::clear_labels() {
  labels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Build::kIdFieldNumber;
const int Build::kRepoSourceFieldNumber;
const int Build::kRepoOwnerFieldNumber;
const int Build::kRepoNameFieldNumber;
const int Build::kRepoBranchFieldNumber;
const int Build::kRepoRevisionFieldNumber;
const int Build::kBuildVersionFieldNumber;
const int Build::kBuildStatusFieldNumber;
const int Build::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Build::Build()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_build_2eproto::scc_info_Build.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:contracts.v1.Build)
}
Build::Build(const Build& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  repo_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_source().size() > 0) {
    repo_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_source_);
  }
  repo_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_owner().size() > 0) {
    repo_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_owner_);
  }
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_name().size() > 0) {
    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  repo_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_branch().size() > 0) {
    repo_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_branch_);
  }
  repo_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_revision().size() > 0) {
    repo_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_revision_);
  }
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_version().size() > 0) {
    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  build_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_status().size() > 0) {
    build_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_status_);
  }
  // @@protoc_insertion_point(copy_constructor:contracts.v1.Build)
}

void Build::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Build::~Build() {
  // @@protoc_insertion_point(destructor:contracts.v1.Build)
  SharedDtor();
}

void Build::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Build::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Build::descriptor() {
  ::protobuf_build_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_build_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Build& Build::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_build_2eproto::scc_info_Build.base);
  return *internal_default_instance();
}


void Build::Clear() {
// @@protoc_insertion_point(message_clear_start:contracts.v1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_revision_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Build::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:contracts.v1.Build)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_source().data(), static_cast<int>(this->repo_source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.repo_source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_owner = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.repo_owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_name().data(), static_cast<int>(this->repo_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.repo_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_branch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_branch().data(), static_cast<int>(this->repo_branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.repo_branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_revision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_revision()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_revision().data(), static_cast<int>(this->repo_revision().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.repo_revision"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_version().data(), static_cast<int>(this->build_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.build_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_status().data(), static_cast<int>(this->build_status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Build.build_status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .contracts.v1.Label labels = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_labels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:contracts.v1.Build)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:contracts.v1.Build)
  return false;
#undef DO_
}

void Build::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:contracts.v1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string repo_source = 2;
  if (this->repo_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_source().data(), static_cast<int>(this->repo_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->repo_source(), output);
  }

  // string repo_owner = 3;
  if (this->repo_owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->repo_owner(), output);
  }

  // string repo_name = 4;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), static_cast<int>(this->repo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->repo_name(), output);
  }

  // string repo_branch = 5;
  if (this->repo_branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_branch().data(), static_cast<int>(this->repo_branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->repo_branch(), output);
  }

  // string repo_revision = 6;
  if (this->repo_revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_revision().data(), static_cast<int>(this->repo_revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->repo_revision(), output);
  }

  // string build_version = 7;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.build_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->build_version(), output);
  }

  // string build_status = 8;
  if (this->build_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_status().data(), static_cast<int>(this->build_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.build_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->build_status(), output);
  }

  // repeated .contracts.v1.Label labels = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->labels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->labels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:contracts.v1.Build)
}

::google::protobuf::uint8* Build::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:contracts.v1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string repo_source = 2;
  if (this->repo_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_source().data(), static_cast<int>(this->repo_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->repo_source(), target);
  }

  // string repo_owner = 3;
  if (this->repo_owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->repo_owner(), target);
  }

  // string repo_name = 4;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), static_cast<int>(this->repo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->repo_name(), target);
  }

  // string repo_branch = 5;
  if (this->repo_branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_branch().data(), static_cast<int>(this->repo_branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->repo_branch(), target);
  }

  // string repo_revision = 6;
  if (this->repo_revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_revision().data(), static_cast<int>(this->repo_revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.repo_revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->repo_revision(), target);
  }

  // string build_version = 7;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.build_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->build_version(), target);
  }

  // string build_status = 8;
  if (this->build_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_status().data(), static_cast<int>(this->build_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Build.build_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->build_status(), target);
  }

  // repeated .contracts.v1.Label labels = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->labels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->labels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:contracts.v1.Build)
  return target;
}

size_t Build::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:contracts.v1.Build)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .contracts.v1.Label labels = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->labels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->labels(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string repo_source = 2;
  if (this->repo_source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_source());
  }

  // string repo_owner = 3;
  if (this->repo_owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_owner());
  }

  // string repo_name = 4;
  if (this->repo_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_name());
  }

  // string repo_branch = 5;
  if (this->repo_branch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_branch());
  }

  // string repo_revision = 6;
  if (this->repo_revision().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_revision());
  }

  // string build_version = 7;
  if (this->build_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_version());
  }

  // string build_status = 8;
  if (this->build_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Build::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:contracts.v1.Build)
  GOOGLE_DCHECK_NE(&from, this);
  const Build* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Build>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:contracts.v1.Build)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:contracts.v1.Build)
    MergeFrom(*source);
  }
}

void Build::MergeFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:contracts.v1.Build)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.repo_source().size() > 0) {

    repo_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_source_);
  }
  if (from.repo_owner().size() > 0) {

    repo_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_owner_);
  }
  if (from.repo_name().size() > 0) {

    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  if (from.repo_branch().size() > 0) {

    repo_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_branch_);
  }
  if (from.repo_revision().size() > 0) {

    repo_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_revision_);
  }
  if (from.build_version().size() > 0) {

    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  if (from.build_status().size() > 0) {

    build_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_status_);
  }
}

void Build::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:contracts.v1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Build::CopyFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:contracts.v1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Build::IsInitialized() const {
  return true;
}

void Build::Swap(Build* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Build::InternalSwap(Build* other) {
  using std::swap;
  CastToBase(&labels_)->InternalSwap(CastToBase(&other->labels_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_source_.Swap(&other->repo_source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_owner_.Swap(&other->repo_owner_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_name_.Swap(&other->repo_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_branch_.Swap(&other->repo_branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_revision_.Swap(&other->repo_revision_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  build_version_.Swap(&other->build_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  build_status_.Swap(&other->build_status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Build::GetMetadata() const {
  protobuf_build_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_build_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::contracts::v1::Build* Arena::CreateMaybeMessage< ::contracts::v1::Build >(Arena* arena) {
  return Arena::CreateInternal< ::contracts::v1::Build >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
