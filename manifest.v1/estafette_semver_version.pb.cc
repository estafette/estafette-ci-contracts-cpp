// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manifest.v1/estafette_semver_version.proto

#include "manifest.v1/estafette_semver_version.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_manifest_2ev1_2fstring_5for_5fstring_5farray_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_manifest_2ev1_2fstring_5for_5fstring_5farray_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringOrStringArray;
}  // namespace protobuf_manifest_2ev1_2fstring_5for_5fstring_5farray_2eproto
namespace manifest {
namespace v1 {
class EstafetteSemverVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EstafetteSemverVersion>
      _instance;
} _EstafetteSemverVersion_default_instance_;
}  // namespace v1
}  // namespace manifest
namespace protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto {
static void InitDefaultsEstafetteSemverVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::manifest::v1::_EstafetteSemverVersion_default_instance_;
    new (ptr) ::manifest::v1::EstafetteSemverVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::manifest::v1::EstafetteSemverVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EstafetteSemverVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEstafetteSemverVersion}, {
      &protobuf_manifest_2ev1_2fstring_5for_5fstring_5farray_2eproto::scc_info_StringOrStringArray.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EstafetteSemverVersion.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::v1::EstafetteSemverVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::v1::EstafetteSemverVersion, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::v1::EstafetteSemverVersion, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::v1::EstafetteSemverVersion, patch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::v1::EstafetteSemverVersion, label_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::v1::EstafetteSemverVersion, release_branch_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::manifest::v1::EstafetteSemverVersion)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::manifest::v1::_EstafetteSemverVersion_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "manifest.v1/estafette_semver_version.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*manifest.v1/estafette_semver_version.p"
      "roto\022\013manifest.v1\032(manifest.v1/string_or"
      "_string_array.proto\"\227\001\n\026EstafetteSemverV"
      "ersion\022\r\n\005major\030\001 \001(\003\022\r\n\005minor\030\002 \001(\003\022\r\n\005"
      "patch\030\003 \001(\t\022\026\n\016label_template\030\004 \001(\t\0228\n\016r"
      "elease_branch\030\005 \001(\0132 .manifest.v1.String"
      "OrStringArrayB|\n\"io.estafette.ci.protos."
      "manifest.v1Z;github.com/estafette/estafe"
      "tte-ci-protos-golang/manifest_v1\252\002\030Estaf"
      "ette.CI.Manifest.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manifest.v1/estafette_semver_version.proto", &protobuf_RegisterTypes);
  ::protobuf_manifest_2ev1_2fstring_5for_5fstring_5farray_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto
namespace manifest {
namespace v1 {

// ===================================================================

void EstafetteSemverVersion::InitAsDefaultInstance() {
  ::manifest::v1::_EstafetteSemverVersion_default_instance_._instance.get_mutable()->release_branch_ = const_cast< ::manifest::v1::StringOrStringArray*>(
      ::manifest::v1::StringOrStringArray::internal_default_instance());
}
void EstafetteSemverVersion::clear_release_branch() {
  if (GetArenaNoVirtual() == NULL && release_branch_ != NULL) {
    delete release_branch_;
  }
  release_branch_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EstafetteSemverVersion::kMajorFieldNumber;
const int EstafetteSemverVersion::kMinorFieldNumber;
const int EstafetteSemverVersion::kPatchFieldNumber;
const int EstafetteSemverVersion::kLabelTemplateFieldNumber;
const int EstafetteSemverVersion::kReleaseBranchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EstafetteSemverVersion::EstafetteSemverVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto::scc_info_EstafetteSemverVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:manifest.v1.EstafetteSemverVersion)
}
EstafetteSemverVersion::EstafetteSemverVersion(const EstafetteSemverVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  patch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.patch().size() > 0) {
    patch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.patch_);
  }
  label_template_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label_template().size() > 0) {
    label_template_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_template_);
  }
  if (from.has_release_branch()) {
    release_branch_ = new ::manifest::v1::StringOrStringArray(*from.release_branch_);
  } else {
    release_branch_ = NULL;
  }
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_) -
    reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  // @@protoc_insertion_point(copy_constructor:manifest.v1.EstafetteSemverVersion)
}

void EstafetteSemverVersion::SharedCtor() {
  patch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_template_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&release_branch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&release_branch_)) + sizeof(minor_));
}

EstafetteSemverVersion::~EstafetteSemverVersion() {
  // @@protoc_insertion_point(destructor:manifest.v1.EstafetteSemverVersion)
  SharedDtor();
}

void EstafetteSemverVersion::SharedDtor() {
  patch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_template_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete release_branch_;
}

void EstafetteSemverVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EstafetteSemverVersion::descriptor() {
  ::protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EstafetteSemverVersion& EstafetteSemverVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto::scc_info_EstafetteSemverVersion.base);
  return *internal_default_instance();
}


void EstafetteSemverVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:manifest.v1.EstafetteSemverVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  patch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_template_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && release_branch_ != NULL) {
    delete release_branch_;
  }
  release_branch_ = NULL;
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  _internal_metadata_.Clear();
}

bool EstafetteSemverVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manifest.v1.EstafetteSemverVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_patch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->patch().data(), static_cast<int>(this->patch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.v1.EstafetteSemverVersion.patch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label_template = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label_template()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label_template().data(), static_cast<int>(this->label_template().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.v1.EstafetteSemverVersion.label_template"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manifest.v1.StringOrStringArray release_branch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_release_branch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manifest.v1.EstafetteSemverVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manifest.v1.EstafetteSemverVersion)
  return false;
#undef DO_
}

void EstafetteSemverVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manifest.v1.EstafetteSemverVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->major(), output);
  }

  // int64 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->minor(), output);
  }

  // string patch = 3;
  if (this->patch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->patch().data(), static_cast<int>(this->patch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.v1.EstafetteSemverVersion.patch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->patch(), output);
  }

  // string label_template = 4;
  if (this->label_template().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_template().data(), static_cast<int>(this->label_template().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.v1.EstafetteSemverVersion.label_template");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->label_template(), output);
  }

  // .manifest.v1.StringOrStringArray release_branch = 5;
  if (this->has_release_branch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_release_branch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manifest.v1.EstafetteSemverVersion)
}

::google::protobuf::uint8* EstafetteSemverVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manifest.v1.EstafetteSemverVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->major(), target);
  }

  // int64 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->minor(), target);
  }

  // string patch = 3;
  if (this->patch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->patch().data(), static_cast<int>(this->patch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.v1.EstafetteSemverVersion.patch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->patch(), target);
  }

  // string label_template = 4;
  if (this->label_template().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label_template().data(), static_cast<int>(this->label_template().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.v1.EstafetteSemverVersion.label_template");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->label_template(), target);
  }

  // .manifest.v1.StringOrStringArray release_branch = 5;
  if (this->has_release_branch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_release_branch(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manifest.v1.EstafetteSemverVersion)
  return target;
}

size_t EstafetteSemverVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manifest.v1.EstafetteSemverVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string patch = 3;
  if (this->patch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->patch());
  }

  // string label_template = 4;
  if (this->label_template().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label_template());
  }

  // .manifest.v1.StringOrStringArray release_branch = 5;
  if (this->has_release_branch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *release_branch_);
  }

  // int64 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->major());
  }

  // int64 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->minor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstafetteSemverVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manifest.v1.EstafetteSemverVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const EstafetteSemverVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EstafetteSemverVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manifest.v1.EstafetteSemverVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manifest.v1.EstafetteSemverVersion)
    MergeFrom(*source);
  }
}

void EstafetteSemverVersion::MergeFrom(const EstafetteSemverVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manifest.v1.EstafetteSemverVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.patch().size() > 0) {

    patch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.patch_);
  }
  if (from.label_template().size() > 0) {

    label_template_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_template_);
  }
  if (from.has_release_branch()) {
    mutable_release_branch()->::manifest::v1::StringOrStringArray::MergeFrom(from.release_branch());
  }
  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
}

void EstafetteSemverVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manifest.v1.EstafetteSemverVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstafetteSemverVersion::CopyFrom(const EstafetteSemverVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manifest.v1.EstafetteSemverVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstafetteSemverVersion::IsInitialized() const {
  return true;
}

void EstafetteSemverVersion::Swap(EstafetteSemverVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EstafetteSemverVersion::InternalSwap(EstafetteSemverVersion* other) {
  using std::swap;
  patch_.Swap(&other->patch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_template_.Swap(&other->label_template_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(release_branch_, other->release_branch_);
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EstafetteSemverVersion::GetMetadata() const {
  protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manifest_2ev1_2festafette_5fsemver_5fversion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace manifest
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::manifest::v1::EstafetteSemverVersion* Arena::CreateMaybeMessage< ::manifest::v1::EstafetteSemverVersion >(Arena* arena) {
  return Arena::CreateInternal< ::manifest::v1::EstafetteSemverVersion >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
