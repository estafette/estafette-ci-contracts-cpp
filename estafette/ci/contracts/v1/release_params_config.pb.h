// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: estafette/ci/contracts/v1/release_params_config.proto

#ifndef PROTOBUF_INCLUDED_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto
#define PROTOBUF_INCLUDED_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto 

namespace protobuf_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto
namespace estafette {
namespace ci {
namespace contracts {
namespace v1 {
class ReleaseParamsConfig;
class ReleaseParamsConfigDefaultTypeInternal;
extern ReleaseParamsConfigDefaultTypeInternal _ReleaseParamsConfig_default_instance_;
}  // namespace v1
}  // namespace contracts
}  // namespace ci
}  // namespace estafette
namespace google {
namespace protobuf {
template<> ::estafette::ci::contracts::v1::ReleaseParamsConfig* Arena::CreateMaybeMessage<::estafette::ci::contracts::v1::ReleaseParamsConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace estafette {
namespace ci {
namespace contracts {
namespace v1 {

// ===================================================================

class ReleaseParamsConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:estafette.ci.contracts.v1.ReleaseParamsConfig) */ {
 public:
  ReleaseParamsConfig();
  virtual ~ReleaseParamsConfig();

  ReleaseParamsConfig(const ReleaseParamsConfig& from);

  inline ReleaseParamsConfig& operator=(const ReleaseParamsConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReleaseParamsConfig(ReleaseParamsConfig&& from) noexcept
    : ReleaseParamsConfig() {
    *this = ::std::move(from);
  }

  inline ReleaseParamsConfig& operator=(ReleaseParamsConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReleaseParamsConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReleaseParamsConfig* internal_default_instance() {
    return reinterpret_cast<const ReleaseParamsConfig*>(
               &_ReleaseParamsConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReleaseParamsConfig* other);
  friend void swap(ReleaseParamsConfig& a, ReleaseParamsConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReleaseParamsConfig* New() const final {
    return CreateMaybeMessage<ReleaseParamsConfig>(NULL);
  }

  ReleaseParamsConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReleaseParamsConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReleaseParamsConfig& from);
  void MergeFrom(const ReleaseParamsConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReleaseParamsConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string release_name = 1;
  void clear_release_name();
  static const int kReleaseNameFieldNumber = 1;
  const ::std::string& release_name() const;
  void set_release_name(const ::std::string& value);
  #if LANG_CXX11
  void set_release_name(::std::string&& value);
  #endif
  void set_release_name(const char* value);
  void set_release_name(const char* value, size_t size);
  ::std::string* mutable_release_name();
  ::std::string* release_release_name();
  void set_allocated_release_name(::std::string* release_name);

  // string release_action = 3;
  void clear_release_action();
  static const int kReleaseActionFieldNumber = 3;
  const ::std::string& release_action() const;
  void set_release_action(const ::std::string& value);
  #if LANG_CXX11
  void set_release_action(::std::string&& value);
  #endif
  void set_release_action(const char* value);
  void set_release_action(const char* value, size_t size);
  ::std::string* mutable_release_action();
  ::std::string* release_release_action();
  void set_allocated_release_action(::std::string* release_action);

  // string triggered_by = 4;
  void clear_triggered_by();
  static const int kTriggeredByFieldNumber = 4;
  const ::std::string& triggered_by() const;
  void set_triggered_by(const ::std::string& value);
  #if LANG_CXX11
  void set_triggered_by(::std::string&& value);
  #endif
  void set_triggered_by(const char* value);
  void set_triggered_by(const char* value, size_t size);
  ::std::string* mutable_triggered_by();
  ::std::string* release_triggered_by();
  void set_allocated_triggered_by(::std::string* triggered_by);

  // int64 release_id = 2;
  void clear_release_id();
  static const int kReleaseIdFieldNumber = 2;
  ::google::protobuf::int64 release_id() const;
  void set_release_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:estafette.ci.contracts.v1.ReleaseParamsConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr release_name_;
  ::google::protobuf::internal::ArenaStringPtr release_action_;
  ::google::protobuf::internal::ArenaStringPtr triggered_by_;
  ::google::protobuf::int64 release_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReleaseParamsConfig

// string release_name = 1;
inline void ReleaseParamsConfig::clear_release_name() {
  release_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReleaseParamsConfig::release_name() const {
  // @@protoc_insertion_point(field_get:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
  return release_name_.GetNoArena();
}
inline void ReleaseParamsConfig::set_release_name(const ::std::string& value) {
  
  release_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
}
#if LANG_CXX11
inline void ReleaseParamsConfig::set_release_name(::std::string&& value) {
  
  release_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
}
#endif
inline void ReleaseParamsConfig::set_release_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  release_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
}
inline void ReleaseParamsConfig::set_release_name(const char* value, size_t size) {
  
  release_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
}
inline ::std::string* ReleaseParamsConfig::mutable_release_name() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
  return release_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReleaseParamsConfig::release_release_name() {
  // @@protoc_insertion_point(field_release:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
  
  return release_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReleaseParamsConfig::set_allocated_release_name(::std::string* release_name) {
  if (release_name != NULL) {
    
  } else {
    
  }
  release_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), release_name);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.contracts.v1.ReleaseParamsConfig.release_name)
}

// int64 release_id = 2;
inline void ReleaseParamsConfig::clear_release_id() {
  release_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReleaseParamsConfig::release_id() const {
  // @@protoc_insertion_point(field_get:estafette.ci.contracts.v1.ReleaseParamsConfig.release_id)
  return release_id_;
}
inline void ReleaseParamsConfig::set_release_id(::google::protobuf::int64 value) {
  
  release_id_ = value;
  // @@protoc_insertion_point(field_set:estafette.ci.contracts.v1.ReleaseParamsConfig.release_id)
}

// string release_action = 3;
inline void ReleaseParamsConfig::clear_release_action() {
  release_action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReleaseParamsConfig::release_action() const {
  // @@protoc_insertion_point(field_get:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
  return release_action_.GetNoArena();
}
inline void ReleaseParamsConfig::set_release_action(const ::std::string& value) {
  
  release_action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
}
#if LANG_CXX11
inline void ReleaseParamsConfig::set_release_action(::std::string&& value) {
  
  release_action_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
}
#endif
inline void ReleaseParamsConfig::set_release_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  release_action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
}
inline void ReleaseParamsConfig::set_release_action(const char* value, size_t size) {
  
  release_action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
}
inline ::std::string* ReleaseParamsConfig::mutable_release_action() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
  return release_action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReleaseParamsConfig::release_release_action() {
  // @@protoc_insertion_point(field_release:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
  
  return release_action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReleaseParamsConfig::set_allocated_release_action(::std::string* release_action) {
  if (release_action != NULL) {
    
  } else {
    
  }
  release_action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), release_action);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.contracts.v1.ReleaseParamsConfig.release_action)
}

// string triggered_by = 4;
inline void ReleaseParamsConfig::clear_triggered_by() {
  triggered_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReleaseParamsConfig::triggered_by() const {
  // @@protoc_insertion_point(field_get:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
  return triggered_by_.GetNoArena();
}
inline void ReleaseParamsConfig::set_triggered_by(const ::std::string& value) {
  
  triggered_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
}
#if LANG_CXX11
inline void ReleaseParamsConfig::set_triggered_by(::std::string&& value) {
  
  triggered_by_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
}
#endif
inline void ReleaseParamsConfig::set_triggered_by(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  triggered_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
}
inline void ReleaseParamsConfig::set_triggered_by(const char* value, size_t size) {
  
  triggered_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
}
inline ::std::string* ReleaseParamsConfig::mutable_triggered_by() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
  return triggered_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReleaseParamsConfig::release_triggered_by() {
  // @@protoc_insertion_point(field_release:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
  
  return triggered_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReleaseParamsConfig::set_allocated_triggered_by(::std::string* triggered_by) {
  if (triggered_by != NULL) {
    
  } else {
    
  }
  triggered_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), triggered_by);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.contracts.v1.ReleaseParamsConfig.triggered_by)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace contracts
}  // namespace ci
}  // namespace estafette

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_estafette_2fci_2fcontracts_2fv1_2frelease_5fparams_5fconfig_2eproto
