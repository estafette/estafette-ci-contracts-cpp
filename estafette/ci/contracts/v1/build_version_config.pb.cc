// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: estafette/ci/contracts/v1/build_version_config.proto

#include "estafette/ci/contracts/v1/build_version_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace estafette {
namespace ci {
namespace contracts {
namespace v1 {
class BuildVersionConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuildVersionConfig> _instance;
} _BuildVersionConfig_default_instance_;
}  // namespace v1
}  // namespace contracts
}  // namespace ci
}  // namespace estafette
static void InitDefaultsscc_info_BuildVersionConfig_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::estafette::ci::contracts::v1::_BuildVersionConfig_default_instance_;
    new (ptr) ::estafette::ci::contracts::v1::BuildVersionConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::estafette::ci::contracts::v1::BuildVersionConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuildVersionConfig_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BuildVersionConfig_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, version_),
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, major_),
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, minor_),
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, patch_),
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, label_),
  PROTOBUF_FIELD_OFFSET(::estafette::ci::contracts::v1::BuildVersionConfig, auto_increment_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::estafette::ci::contracts::v1::BuildVersionConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::estafette::ci::contracts::v1::_BuildVersionConfig_default_instance_),
};

const char descriptor_table_protodef_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto[] =
  "\n4estafette/ci/contracts/v1/build_versio"
  "n_config.proto\022\031estafette.ci.contracts.v"
  "1\"y\n\022BuildVersionConfig\022\017\n\007version\030\001 \001(\t"
  "\022\r\n\005major\030\002 \001(\003\022\r\n\005minor\030\003 \001(\003\022\r\n\005patch\030"
  "\004 \001(\t\022\r\n\005label\030\005 \001(\t\022\026\n\016auto_increment\030\006"
  " \001(\003B{\n\035com.estafette.ci.contracts.v1P\001Z"
  "<github.com/estafette/estafette-ci-proto"
  "s-golang/contracts/v1\252\002\031Estafette.Ci.Con"
  "tracts.V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_sccs[1] = {
  &scc_info_BuildVersionConfig_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_once;
static bool descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto = {
  &descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_initialized, descriptor_table_protodef_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto, "estafette/ci/contracts/v1/build_version_config.proto", 337,
  &descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_once, descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_sccs, descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto::offsets,
  file_level_metadata_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto, 1, file_level_enum_descriptors_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto, file_level_service_descriptors_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto), true);
namespace estafette {
namespace ci {
namespace contracts {
namespace v1 {

// ===================================================================

void BuildVersionConfig::InitAsDefaultInstance() {
}
class BuildVersionConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildVersionConfig::kVersionFieldNumber;
const int BuildVersionConfig::kMajorFieldNumber;
const int BuildVersionConfig::kMinorFieldNumber;
const int BuildVersionConfig::kPatchFieldNumber;
const int BuildVersionConfig::kLabelFieldNumber;
const int BuildVersionConfig::kAutoIncrementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildVersionConfig::BuildVersionConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:estafette.ci.contracts.v1.BuildVersionConfig)
}
BuildVersionConfig::BuildVersionConfig(const BuildVersionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  patch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.patch().size() > 0) {
    patch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.patch_);
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_increment_) -
    reinterpret_cast<char*>(&major_)) + sizeof(auto_increment_));
  // @@protoc_insertion_point(copy_constructor:estafette.ci.contracts.v1.BuildVersionConfig)
}

void BuildVersionConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BuildVersionConfig_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  patch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_increment_) -
      reinterpret_cast<char*>(&major_)) + sizeof(auto_increment_));
}

BuildVersionConfig::~BuildVersionConfig() {
  // @@protoc_insertion_point(destructor:estafette.ci.contracts.v1.BuildVersionConfig)
  SharedDtor();
}

void BuildVersionConfig::SharedDtor() {
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  patch_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BuildVersionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuildVersionConfig& BuildVersionConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuildVersionConfig_estafette_2fci_2fcontracts_2fv1_2fbuild_5fversion_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void BuildVersionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:estafette.ci.contracts.v1.BuildVersionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  patch_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_increment_) -
      reinterpret_cast<char*>(&major_)) + sizeof(auto_increment_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BuildVersionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_version(), ptr, ctx, "estafette.ci.contracts.v1.BuildVersionConfig.version");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 major = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          major_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 minor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          minor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string patch = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_patch(), ptr, ctx, "estafette.ci.contracts.v1.BuildVersionConfig.patch");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string label = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_label(), ptr, ctx, "estafette.ci.contracts.v1.BuildVersionConfig.label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 auto_increment = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          auto_increment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BuildVersionConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:estafette.ci.contracts.v1.BuildVersionConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "estafette.ci.contracts.v1.BuildVersionConfig.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 major = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 minor = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string patch = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_patch()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->patch().data(), static_cast<int>(this->patch().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "estafette.ci.contracts.v1.BuildVersionConfig.patch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "estafette.ci.contracts.v1.BuildVersionConfig.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 auto_increment = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &auto_increment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:estafette.ci.contracts.v1.BuildVersionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:estafette.ci.contracts.v1.BuildVersionConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BuildVersionConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:estafette.ci.contracts.v1.BuildVersionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.contracts.v1.BuildVersionConfig.version");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // int64 major = 2;
  if (this->major() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->major(), output);
  }

  // int64 minor = 3;
  if (this->minor() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->minor(), output);
  }

  // string patch = 4;
  if (this->patch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->patch().data(), static_cast<int>(this->patch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.contracts.v1.BuildVersionConfig.patch");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->patch(), output);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.contracts.v1.BuildVersionConfig.label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label(), output);
  }

  // int64 auto_increment = 6;
  if (this->auto_increment() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->auto_increment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:estafette.ci.contracts.v1.BuildVersionConfig)
}

::PROTOBUF_NAMESPACE_ID::uint8* BuildVersionConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:estafette.ci.contracts.v1.BuildVersionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.contracts.v1.BuildVersionConfig.version");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // int64 major = 2;
  if (this->major() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->major(), target);
  }

  // int64 minor = 3;
  if (this->minor() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->minor(), target);
  }

  // string patch = 4;
  if (this->patch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->patch().data(), static_cast<int>(this->patch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.contracts.v1.BuildVersionConfig.patch");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->patch(), target);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.contracts.v1.BuildVersionConfig.label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->label(), target);
  }

  // int64 auto_increment = 6;
  if (this->auto_increment() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->auto_increment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:estafette.ci.contracts.v1.BuildVersionConfig)
  return target;
}

size_t BuildVersionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:estafette.ci.contracts.v1.BuildVersionConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string patch = 4;
  if (this->patch().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->patch());
  }

  // string label = 5;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->label());
  }

  // int64 major = 2;
  if (this->major() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->major());
  }

  // int64 minor = 3;
  if (this->minor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->minor());
  }

  // int64 auto_increment = 6;
  if (this->auto_increment() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->auto_increment());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildVersionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:estafette.ci.contracts.v1.BuildVersionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildVersionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuildVersionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:estafette.ci.contracts.v1.BuildVersionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:estafette.ci.contracts.v1.BuildVersionConfig)
    MergeFrom(*source);
  }
}

void BuildVersionConfig::MergeFrom(const BuildVersionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:estafette.ci.contracts.v1.BuildVersionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.patch().size() > 0) {

    patch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.patch_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
  if (from.auto_increment() != 0) {
    set_auto_increment(from.auto_increment());
  }
}

void BuildVersionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:estafette.ci.contracts.v1.BuildVersionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildVersionConfig::CopyFrom(const BuildVersionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:estafette.ci.contracts.v1.BuildVersionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildVersionConfig::IsInitialized() const {
  return true;
}

void BuildVersionConfig::Swap(BuildVersionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildVersionConfig::InternalSwap(BuildVersionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  patch_.Swap(&other->patch_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(auto_increment_, other->auto_increment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuildVersionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contracts
}  // namespace ci
}  // namespace estafette
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::estafette::ci::contracts::v1::BuildVersionConfig* Arena::CreateMaybeMessage< ::estafette::ci::contracts::v1::BuildVersionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::estafette::ci::contracts::v1::BuildVersionConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
