// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: estafette/ci/manifest/v1/estafette_release_trigger.proto

#ifndef PROTOBUF_INCLUDED_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto
#define PROTOBUF_INCLUDED_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto 

namespace protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto
namespace estafette {
namespace ci {
namespace manifest {
namespace v1 {
class EstafetteReleaseTrigger;
class EstafetteReleaseTriggerDefaultTypeInternal;
extern EstafetteReleaseTriggerDefaultTypeInternal _EstafetteReleaseTrigger_default_instance_;
}  // namespace v1
}  // namespace manifest
}  // namespace ci
}  // namespace estafette
namespace google {
namespace protobuf {
template<> ::estafette::ci::manifest::v1::EstafetteReleaseTrigger* Arena::CreateMaybeMessage<::estafette::ci::manifest::v1::EstafetteReleaseTrigger>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace estafette {
namespace ci {
namespace manifest {
namespace v1 {

// ===================================================================

class EstafetteReleaseTrigger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:estafette.ci.manifest.v1.EstafetteReleaseTrigger) */ {
 public:
  EstafetteReleaseTrigger();
  virtual ~EstafetteReleaseTrigger();

  EstafetteReleaseTrigger(const EstafetteReleaseTrigger& from);

  inline EstafetteReleaseTrigger& operator=(const EstafetteReleaseTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EstafetteReleaseTrigger(EstafetteReleaseTrigger&& from) noexcept
    : EstafetteReleaseTrigger() {
    *this = ::std::move(from);
  }

  inline EstafetteReleaseTrigger& operator=(EstafetteReleaseTrigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EstafetteReleaseTrigger& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EstafetteReleaseTrigger* internal_default_instance() {
    return reinterpret_cast<const EstafetteReleaseTrigger*>(
               &_EstafetteReleaseTrigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EstafetteReleaseTrigger* other);
  friend void swap(EstafetteReleaseTrigger& a, EstafetteReleaseTrigger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EstafetteReleaseTrigger* New() const final {
    return CreateMaybeMessage<EstafetteReleaseTrigger>(NULL);
  }

  EstafetteReleaseTrigger* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EstafetteReleaseTrigger>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EstafetteReleaseTrigger& from);
  void MergeFrom(const EstafetteReleaseTrigger& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EstafetteReleaseTrigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string event = 1;
  void clear_event();
  static const int kEventFieldNumber = 1;
  const ::std::string& event() const;
  void set_event(const ::std::string& value);
  #if LANG_CXX11
  void set_event(::std::string&& value);
  #endif
  void set_event(const char* value);
  void set_event(const char* value, size_t size);
  ::std::string* mutable_event();
  ::std::string* release_event();
  void set_allocated_event(::std::string* event);

  // string status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // @@protoc_insertion_point(class_scope:estafette.ci.manifest.v1.EstafetteReleaseTrigger)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr event_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EstafetteReleaseTrigger

// string event = 1;
inline void EstafetteReleaseTrigger::clear_event() {
  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstafetteReleaseTrigger::event() const {
  // @@protoc_insertion_point(field_get:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
  return event_.GetNoArena();
}
inline void EstafetteReleaseTrigger::set_event(const ::std::string& value) {
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
}
#if LANG_CXX11
inline void EstafetteReleaseTrigger::set_event(::std::string&& value) {
  
  event_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
}
#endif
inline void EstafetteReleaseTrigger::set_event(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
}
inline void EstafetteReleaseTrigger::set_event(const char* value, size_t size) {
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
}
inline ::std::string* EstafetteReleaseTrigger::mutable_event() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
  return event_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstafetteReleaseTrigger::release_event() {
  // @@protoc_insertion_point(field_release:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
  
  return event_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstafetteReleaseTrigger::set_allocated_event(::std::string* event) {
  if (event != NULL) {
    
  } else {
    
  }
  event_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.manifest.v1.EstafetteReleaseTrigger.event)
}

// string status = 2;
inline void EstafetteReleaseTrigger::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstafetteReleaseTrigger::status() const {
  // @@protoc_insertion_point(field_get:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
  return status_.GetNoArena();
}
inline void EstafetteReleaseTrigger::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
}
#if LANG_CXX11
inline void EstafetteReleaseTrigger::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
}
#endif
inline void EstafetteReleaseTrigger::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
}
inline void EstafetteReleaseTrigger::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
}
inline ::std::string* EstafetteReleaseTrigger::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstafetteReleaseTrigger::release_status() {
  // @@protoc_insertion_point(field_release:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstafetteReleaseTrigger::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.manifest.v1.EstafetteReleaseTrigger.status)
}

// string name = 3;
inline void EstafetteReleaseTrigger::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstafetteReleaseTrigger::name() const {
  // @@protoc_insertion_point(field_get:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
  return name_.GetNoArena();
}
inline void EstafetteReleaseTrigger::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
}
#if LANG_CXX11
inline void EstafetteReleaseTrigger::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
}
#endif
inline void EstafetteReleaseTrigger::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
}
inline void EstafetteReleaseTrigger::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
}
inline ::std::string* EstafetteReleaseTrigger::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstafetteReleaseTrigger::release_name() {
  // @@protoc_insertion_point(field_release:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstafetteReleaseTrigger::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.manifest.v1.EstafetteReleaseTrigger.name)
}

// string target = 4;
inline void EstafetteReleaseTrigger::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstafetteReleaseTrigger::target() const {
  // @@protoc_insertion_point(field_get:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
  return target_.GetNoArena();
}
inline void EstafetteReleaseTrigger::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
}
#if LANG_CXX11
inline void EstafetteReleaseTrigger::set_target(::std::string&& value) {
  
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
}
#endif
inline void EstafetteReleaseTrigger::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
}
inline void EstafetteReleaseTrigger::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
}
inline ::std::string* EstafetteReleaseTrigger::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstafetteReleaseTrigger::release_target() {
  // @@protoc_insertion_point(field_release:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstafetteReleaseTrigger::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:estafette.ci.manifest.v1.EstafetteReleaseTrigger.target)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace manifest
}  // namespace ci
}  // namespace estafette

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_estafette_2fci_2fmanifest_2fv1_2festafette_5frelease_5ftrigger_2eproto
