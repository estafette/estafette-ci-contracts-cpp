// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: estafette/ci/manifest/v1/estafette_pipeline_event.proto

#include "estafette/ci/manifest/v1/estafette_pipeline_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace estafette {
namespace ci {
namespace manifest {
namespace v1 {
class EstafettePipelineEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EstafettePipelineEvent>
      _instance;
} _EstafettePipelineEvent_default_instance_;
}  // namespace v1
}  // namespace manifest
}  // namespace ci
}  // namespace estafette
namespace protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto {
static void InitDefaultsEstafettePipelineEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::estafette::ci::manifest::v1::_EstafettePipelineEvent_default_instance_;
    new (ptr) ::estafette::ci::manifest::v1::EstafettePipelineEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::estafette::ci::manifest::v1::EstafettePipelineEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EstafettePipelineEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEstafettePipelineEvent}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EstafettePipelineEvent.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, build_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, repo_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, repo_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, repo_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, repo_branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::estafette::ci::manifest::v1::EstafettePipelineEvent, event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::estafette::ci::manifest::v1::EstafettePipelineEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::estafette::ci::manifest::v1::_EstafettePipelineEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "estafette/ci/manifest/v1/estafette_pipeline_event.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n7estafette/ci/manifest/v1/estafette_pip"
      "eline_event.proto\022\030estafette.ci.manifest"
      ".v1\"\237\001\n\026EstafettePipelineEvent\022\025\n\rbuild_"
      "version\030\001 \001(\t\022\023\n\013repo_source\030\002 \001(\t\022\022\n\nre"
      "po_owner\030\003 \001(\t\022\021\n\trepo_name\030\004 \001(\t\022\023\n\013rep"
      "o_branch\030\005 \001(\t\022\016\n\006status\030\006 \001(\t\022\r\n\005event\030"
      "\007 \001(\tBx\n\034com.estafette.ci.manifest.v1P\001Z"
      ";github.com/estafette/estafette-ci-proto"
      "s-golang/manifest_v1\252\002\030Estafette.Ci.Mani"
      "fest.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "estafette/ci/manifest/v1/estafette_pipeline_event.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto
namespace estafette {
namespace ci {
namespace manifest {
namespace v1 {

// ===================================================================

void EstafettePipelineEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EstafettePipelineEvent::kBuildVersionFieldNumber;
const int EstafettePipelineEvent::kRepoSourceFieldNumber;
const int EstafettePipelineEvent::kRepoOwnerFieldNumber;
const int EstafettePipelineEvent::kRepoNameFieldNumber;
const int EstafettePipelineEvent::kRepoBranchFieldNumber;
const int EstafettePipelineEvent::kStatusFieldNumber;
const int EstafettePipelineEvent::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EstafettePipelineEvent::EstafettePipelineEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto::scc_info_EstafettePipelineEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:estafette.ci.manifest.v1.EstafettePipelineEvent)
}
EstafettePipelineEvent::EstafettePipelineEvent(const EstafettePipelineEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_version().size() > 0) {
    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  repo_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_source().size() > 0) {
    repo_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_source_);
  }
  repo_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_owner().size() > 0) {
    repo_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_owner_);
  }
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_name().size() > 0) {
    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  repo_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_branch().size() > 0) {
    repo_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_branch_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event().size() > 0) {
    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  // @@protoc_insertion_point(copy_constructor:estafette.ci.manifest.v1.EstafettePipelineEvent)
}

void EstafettePipelineEvent::SharedCtor() {
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EstafettePipelineEvent::~EstafettePipelineEvent() {
  // @@protoc_insertion_point(destructor:estafette.ci.manifest.v1.EstafettePipelineEvent)
  SharedDtor();
}

void EstafettePipelineEvent::SharedDtor() {
  build_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EstafettePipelineEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EstafettePipelineEvent::descriptor() {
  ::protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EstafettePipelineEvent& EstafettePipelineEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto::scc_info_EstafettePipelineEvent.base);
  return *internal_default_instance();
}


void EstafettePipelineEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  build_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EstafettePipelineEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string build_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_version().data(), static_cast<int>(this->build_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.build_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_source().data(), static_cast<int>(this->repo_source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_owner = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_name().data(), static_cast<int>(this->repo_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_branch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_branch().data(), static_cast<int>(this->repo_branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string event = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event().data(), static_cast<int>(this->event().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "estafette.ci.manifest.v1.EstafettePipelineEvent.event"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:estafette.ci.manifest.v1.EstafettePipelineEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:estafette.ci.manifest.v1.EstafettePipelineEvent)
  return false;
#undef DO_
}

void EstafettePipelineEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string build_version = 1;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.build_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->build_version(), output);
  }

  // string repo_source = 2;
  if (this->repo_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_source().data(), static_cast<int>(this->repo_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->repo_source(), output);
  }

  // string repo_owner = 3;
  if (this->repo_owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->repo_owner(), output);
  }

  // string repo_name = 4;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), static_cast<int>(this->repo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->repo_name(), output);
  }

  // string repo_branch = 5;
  if (this->repo_branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_branch().data(), static_cast<int>(this->repo_branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->repo_branch(), output);
  }

  // string status = 6;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->status(), output);
  }

  // string event = 7;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event().data(), static_cast<int>(this->event().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.event");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:estafette.ci.manifest.v1.EstafettePipelineEvent)
}

::google::protobuf::uint8* EstafettePipelineEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string build_version = 1;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.build_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->build_version(), target);
  }

  // string repo_source = 2;
  if (this->repo_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_source().data(), static_cast<int>(this->repo_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->repo_source(), target);
  }

  // string repo_owner = 3;
  if (this->repo_owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->repo_owner(), target);
  }

  // string repo_name = 4;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), static_cast<int>(this->repo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->repo_name(), target);
  }

  // string repo_branch = 5;
  if (this->repo_branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_branch().data(), static_cast<int>(this->repo_branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.repo_branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->repo_branch(), target);
  }

  // string status = 6;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->status(), target);
  }

  // string event = 7;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event().data(), static_cast<int>(this->event().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "estafette.ci.manifest.v1.EstafettePipelineEvent.event");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->event(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:estafette.ci.manifest.v1.EstafettePipelineEvent)
  return target;
}

size_t EstafettePipelineEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string build_version = 1;
  if (this->build_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_version());
  }

  // string repo_source = 2;
  if (this->repo_source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_source());
  }

  // string repo_owner = 3;
  if (this->repo_owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_owner());
  }

  // string repo_name = 4;
  if (this->repo_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_name());
  }

  // string repo_branch = 5;
  if (this->repo_branch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_branch());
  }

  // string status = 6;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // string event = 7;
  if (this->event().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstafettePipelineEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EstafettePipelineEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EstafettePipelineEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:estafette.ci.manifest.v1.EstafettePipelineEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:estafette.ci.manifest.v1.EstafettePipelineEvent)
    MergeFrom(*source);
  }
}

void EstafettePipelineEvent::MergeFrom(const EstafettePipelineEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.build_version().size() > 0) {

    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  if (from.repo_source().size() > 0) {

    repo_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_source_);
  }
  if (from.repo_owner().size() > 0) {

    repo_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_owner_);
  }
  if (from.repo_name().size() > 0) {

    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  if (from.repo_branch().size() > 0) {

    repo_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_branch_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.event().size() > 0) {

    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
}

void EstafettePipelineEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstafettePipelineEvent::CopyFrom(const EstafettePipelineEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:estafette.ci.manifest.v1.EstafettePipelineEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstafettePipelineEvent::IsInitialized() const {
  return true;
}

void EstafettePipelineEvent::Swap(EstafettePipelineEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EstafettePipelineEvent::InternalSwap(EstafettePipelineEvent* other) {
  using std::swap;
  build_version_.Swap(&other->build_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_source_.Swap(&other->repo_source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_owner_.Swap(&other->repo_owner_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_name_.Swap(&other->repo_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_branch_.Swap(&other->repo_branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  event_.Swap(&other->event_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EstafettePipelineEvent::GetMetadata() const {
  protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_estafette_2fci_2fmanifest_2fv1_2festafette_5fpipeline_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace manifest
}  // namespace ci
}  // namespace estafette
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::estafette::ci::manifest::v1::EstafettePipelineEvent* Arena::CreateMaybeMessage< ::estafette::ci::manifest::v1::EstafettePipelineEvent >(Arena* arena) {
  return Arena::CreateInternal< ::estafette::ci::manifest::v1::EstafettePipelineEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
