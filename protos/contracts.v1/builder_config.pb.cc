// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/contracts.v1/builder_config.proto

#include "protos/contracts.v1/builder_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5fparams_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fbuild_5fparams_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuildParamsConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5fparams_5fconfig_2eproto
namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuildVersionConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto
namespace protobuf_protos_2fcontracts_2ev1_2fci_5fserver_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fci_5fserver_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CIServerConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2fci_5fserver_5fconfig_2eproto
namespace protobuf_protos_2fcontracts_2ev1_2fcredential_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fcredential_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CredentialConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2fcredential_5fconfig_2eproto
namespace protobuf_protos_2fcontracts_2ev1_2fgit_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fgit_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GitConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2fgit_5fconfig_2eproto
namespace protobuf_protos_2fcontracts_2ev1_2frelease_5fparams_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2frelease_5fparams_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseParamsConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2frelease_5fparams_5fconfig_2eproto
namespace protobuf_protos_2fcontracts_2ev1_2ftrusted_5fimage_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2ftrusted_5fimage_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TrustedImageConfig;
}  // namespace protobuf_protos_2fcontracts_2ev1_2ftrusted_5fimage_5fconfig_2eproto
namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fevent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fmanifest_2ev1_2festafette_5fevent_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_EstafetteEvent;
}  // namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fevent_2eproto
namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_EstafetteManifest;
}  // namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto
namespace contracts {
namespace v1 {
class BuilderConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuilderConfig>
      _instance;
} _BuilderConfig_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto {
static void InitDefaultsBuilderConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::contracts::v1::_BuilderConfig_default_instance_;
    new (ptr) ::contracts::v1::BuilderConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::contracts::v1::BuilderConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_BuilderConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsBuilderConfig}, {
      &protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto::scc_info_EstafetteManifest.base,
      &protobuf_protos_2fmanifest_2ev1_2festafette_5fevent_2eproto::scc_info_EstafetteEvent.base,
      &protobuf_protos_2fcontracts_2ev1_2fci_5fserver_5fconfig_2eproto::scc_info_CIServerConfig.base,
      &protobuf_protos_2fcontracts_2ev1_2fbuild_5fparams_5fconfig_2eproto::scc_info_BuildParamsConfig.base,
      &protobuf_protos_2fcontracts_2ev1_2frelease_5fparams_5fconfig_2eproto::scc_info_ReleaseParamsConfig.base,
      &protobuf_protos_2fcontracts_2ev1_2fgit_5fconfig_2eproto::scc_info_GitConfig.base,
      &protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto::scc_info_BuildVersionConfig.base,
      &protobuf_protos_2fcontracts_2ev1_2fcredential_5fconfig_2eproto::scc_info_CredentialConfig.base,
      &protobuf_protos_2fcontracts_2ev1_2ftrusted_5fimage_5fconfig_2eproto::scc_info_TrustedImageConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BuilderConfig.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, track_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, registry_mirror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, docker_daemon_mtu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, manifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, job_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, release_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, ci_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, build_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, release_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, git_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, build_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::BuilderConfig, trusted_images_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::contracts::v1::BuilderConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::contracts::v1::_BuilderConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/contracts.v1/builder_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(protos/contracts.v1/builder_config.pro"
      "to\022\014contracts.v1\032-protos/contracts.v1/bu"
      "ild_params_config.proto\032.protos/contract"
      "s.v1/build_version_config.proto\032*protos/"
      "contracts.v1/ci_server_config.proto\032+pro"
      "tos/contracts.v1/credential_config.proto"
      "\032$protos/contracts.v1/git_config.proto\032/"
      "protos/contracts.v1/release_params_confi"
      "g.proto\032.protos/contracts.v1/trusted_ima"
      "ge_config.proto\032(protos/manifest.v1/esta"
      "fette_event.proto\032+protos/manifest.v1/es"
      "tafette_manifest.proto\"\332\004\n\rBuilderConfig"
      "\022\016\n\006action\030\001 \001(\t\022\r\n\005track\030\002 \001(\t\022\027\n\017regis"
      "try_mirror\030\003 \001(\t\022\031\n\021docker_daemon_mtu\030\004 "
      "\001(\t\0220\n\010manifest\030\005 \001(\0132\036.manifest.v1.Esta"
      "fetteManifest\022\020\n\010job_name\030\006 \001(\t\022\024\n\014relea"
      "se_name\030\007 \001(\t\022+\n\006events\030\010 \003(\0132\033.manifest"
      ".v1.EstafetteEvent\022/\n\tci_server\030\t \001(\0132\034."
      "contracts.v1.CIServerConfig\0225\n\014build_par"
      "ams\030\n \001(\0132\037.contracts.v1.BuildParamsConf"
      "ig\0229\n\016release_params\030\013 \001(\0132!.contracts.v"
      "1.ReleaseParamsConfig\022$\n\003git\030\014 \001(\0132\027.con"
      "tracts.v1.GitConfig\0227\n\rbuild_version\030\r \001"
      "(\0132 .contracts.v1.BuildVersionConfig\0223\n\013"
      "credentials\030\016 \003(\0132\036.contracts.v1.Credent"
      "ialConfig\0228\n\016trusted_images\030\017 \003(\0132 .cont"
      "racts.v1.TrustedImageConfigB\177\n#io.estafe"
      "tte.ci.protos.contracts.v1Z<github.com/e"
      "stafette/estafette-ci-protos-golang/cont"
      "racts_v1\252\002\031Estafette.CI.Contracts.V1b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1204);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/contracts.v1/builder_config.proto", &protobuf_RegisterTypes);
  ::protobuf_protos_2fcontracts_2ev1_2fbuild_5fparams_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fcontracts_2ev1_2fci_5fserver_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fcontracts_2ev1_2fcredential_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fcontracts_2ev1_2fgit_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fcontracts_2ev1_2frelease_5fparams_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fcontracts_2ev1_2ftrusted_5fimage_5fconfig_2eproto::AddDescriptors();
  ::protobuf_protos_2fmanifest_2ev1_2festafette_5fevent_2eproto::AddDescriptors();
  ::protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto
namespace contracts {
namespace v1 {

// ===================================================================

void BuilderConfig::InitAsDefaultInstance() {
  ::contracts::v1::_BuilderConfig_default_instance_._instance.get_mutable()->manifest_ = const_cast< ::manifest::v1::EstafetteManifest*>(
      ::manifest::v1::EstafetteManifest::internal_default_instance());
  ::contracts::v1::_BuilderConfig_default_instance_._instance.get_mutable()->ci_server_ = const_cast< ::contracts::v1::CIServerConfig*>(
      ::contracts::v1::CIServerConfig::internal_default_instance());
  ::contracts::v1::_BuilderConfig_default_instance_._instance.get_mutable()->build_params_ = const_cast< ::contracts::v1::BuildParamsConfig*>(
      ::contracts::v1::BuildParamsConfig::internal_default_instance());
  ::contracts::v1::_BuilderConfig_default_instance_._instance.get_mutable()->release_params_ = const_cast< ::contracts::v1::ReleaseParamsConfig*>(
      ::contracts::v1::ReleaseParamsConfig::internal_default_instance());
  ::contracts::v1::_BuilderConfig_default_instance_._instance.get_mutable()->git_ = const_cast< ::contracts::v1::GitConfig*>(
      ::contracts::v1::GitConfig::internal_default_instance());
  ::contracts::v1::_BuilderConfig_default_instance_._instance.get_mutable()->build_version_ = const_cast< ::contracts::v1::BuildVersionConfig*>(
      ::contracts::v1::BuildVersionConfig::internal_default_instance());
}
void BuilderConfig::clear_manifest() {
  if (GetArenaNoVirtual() == NULL && manifest_ != NULL) {
    delete manifest_;
  }
  manifest_ = NULL;
}
void BuilderConfig::clear_events() {
  events_.Clear();
}
void BuilderConfig::clear_ci_server() {
  if (GetArenaNoVirtual() == NULL && ci_server_ != NULL) {
    delete ci_server_;
  }
  ci_server_ = NULL;
}
void BuilderConfig::clear_build_params() {
  if (GetArenaNoVirtual() == NULL && build_params_ != NULL) {
    delete build_params_;
  }
  build_params_ = NULL;
}
void BuilderConfig::clear_release_params() {
  if (GetArenaNoVirtual() == NULL && release_params_ != NULL) {
    delete release_params_;
  }
  release_params_ = NULL;
}
void BuilderConfig::clear_git() {
  if (GetArenaNoVirtual() == NULL && git_ != NULL) {
    delete git_;
  }
  git_ = NULL;
}
void BuilderConfig::clear_build_version() {
  if (GetArenaNoVirtual() == NULL && build_version_ != NULL) {
    delete build_version_;
  }
  build_version_ = NULL;
}
void BuilderConfig::clear_credentials() {
  credentials_.Clear();
}
void BuilderConfig::clear_trusted_images() {
  trusted_images_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuilderConfig::kActionFieldNumber;
const int BuilderConfig::kTrackFieldNumber;
const int BuilderConfig::kRegistryMirrorFieldNumber;
const int BuilderConfig::kDockerDaemonMtuFieldNumber;
const int BuilderConfig::kManifestFieldNumber;
const int BuilderConfig::kJobNameFieldNumber;
const int BuilderConfig::kReleaseNameFieldNumber;
const int BuilderConfig::kEventsFieldNumber;
const int BuilderConfig::kCiServerFieldNumber;
const int BuilderConfig::kBuildParamsFieldNumber;
const int BuilderConfig::kReleaseParamsFieldNumber;
const int BuilderConfig::kGitFieldNumber;
const int BuilderConfig::kBuildVersionFieldNumber;
const int BuilderConfig::kCredentialsFieldNumber;
const int BuilderConfig::kTrustedImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuilderConfig::BuilderConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::scc_info_BuilderConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:contracts.v1.BuilderConfig)
}
BuilderConfig::BuilderConfig(const BuilderConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_),
      credentials_(from.credentials_),
      trusted_images_(from.trusted_images_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  track_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.track().size() > 0) {
    track_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.track_);
  }
  registry_mirror_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.registry_mirror().size() > 0) {
    registry_mirror_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registry_mirror_);
  }
  docker_daemon_mtu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.docker_daemon_mtu().size() > 0) {
    docker_daemon_mtu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docker_daemon_mtu_);
  }
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_name().size() > 0) {
    job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_name_);
  }
  release_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.release_name().size() > 0) {
    release_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_name_);
  }
  if (from.has_manifest()) {
    manifest_ = new ::manifest::v1::EstafetteManifest(*from.manifest_);
  } else {
    manifest_ = NULL;
  }
  if (from.has_ci_server()) {
    ci_server_ = new ::contracts::v1::CIServerConfig(*from.ci_server_);
  } else {
    ci_server_ = NULL;
  }
  if (from.has_build_params()) {
    build_params_ = new ::contracts::v1::BuildParamsConfig(*from.build_params_);
  } else {
    build_params_ = NULL;
  }
  if (from.has_release_params()) {
    release_params_ = new ::contracts::v1::ReleaseParamsConfig(*from.release_params_);
  } else {
    release_params_ = NULL;
  }
  if (from.has_git()) {
    git_ = new ::contracts::v1::GitConfig(*from.git_);
  } else {
    git_ = NULL;
  }
  if (from.has_build_version()) {
    build_version_ = new ::contracts::v1::BuildVersionConfig(*from.build_version_);
  } else {
    build_version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:contracts.v1.BuilderConfig)
}

void BuilderConfig::SharedCtor() {
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registry_mirror_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docker_daemon_mtu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&manifest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&build_version_) -
      reinterpret_cast<char*>(&manifest_)) + sizeof(build_version_));
}

BuilderConfig::~BuilderConfig() {
  // @@protoc_insertion_point(destructor:contracts.v1.BuilderConfig)
  SharedDtor();
}

void BuilderConfig::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registry_mirror_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docker_daemon_mtu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete manifest_;
  if (this != internal_default_instance()) delete ci_server_;
  if (this != internal_default_instance()) delete build_params_;
  if (this != internal_default_instance()) delete release_params_;
  if (this != internal_default_instance()) delete git_;
  if (this != internal_default_instance()) delete build_version_;
}

void BuilderConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BuilderConfig::descriptor() {
  ::protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuilderConfig& BuilderConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::scc_info_BuilderConfig.base);
  return *internal_default_instance();
}


void BuilderConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:contracts.v1.BuilderConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  credentials_.Clear();
  trusted_images_.Clear();
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registry_mirror_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docker_daemon_mtu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && manifest_ != NULL) {
    delete manifest_;
  }
  manifest_ = NULL;
  if (GetArenaNoVirtual() == NULL && ci_server_ != NULL) {
    delete ci_server_;
  }
  ci_server_ = NULL;
  if (GetArenaNoVirtual() == NULL && build_params_ != NULL) {
    delete build_params_;
  }
  build_params_ = NULL;
  if (GetArenaNoVirtual() == NULL && release_params_ != NULL) {
    delete release_params_;
  }
  release_params_ = NULL;
  if (GetArenaNoVirtual() == NULL && git_ != NULL) {
    delete git_;
  }
  git_ = NULL;
  if (GetArenaNoVirtual() == NULL && build_version_ != NULL) {
    delete build_version_;
  }
  build_version_ = NULL;
  _internal_metadata_.Clear();
}

bool BuilderConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:contracts.v1.BuilderConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.BuilderConfig.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string track = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_track()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->track().data(), static_cast<int>(this->track().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.BuilderConfig.track"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string registry_mirror = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registry_mirror()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->registry_mirror().data(), static_cast<int>(this->registry_mirror().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.BuilderConfig.registry_mirror"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string docker_daemon_mtu = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docker_daemon_mtu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->docker_daemon_mtu().data(), static_cast<int>(this->docker_daemon_mtu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.BuilderConfig.docker_daemon_mtu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .manifest.v1.EstafetteManifest manifest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manifest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_name().data(), static_cast<int>(this->job_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.BuilderConfig.job_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string release_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_release_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->release_name().data(), static_cast<int>(this->release_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.BuilderConfig.release_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manifest.v1.EstafetteEvent events = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.CIServerConfig ci_server = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ci_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.BuildParamsConfig build_params = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.ReleaseParamsConfig release_params = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_release_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.GitConfig git = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_git()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.BuildVersionConfig build_version = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .contracts.v1.CredentialConfig credentials = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .contracts.v1.TrustedImageConfig trusted_images = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trusted_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:contracts.v1.BuilderConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:contracts.v1.BuilderConfig)
  return false;
#undef DO_
}

void BuilderConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:contracts.v1.BuilderConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  // string track = 2;
  if (this->track().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->track().data(), static_cast<int>(this->track().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.track");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->track(), output);
  }

  // string registry_mirror = 3;
  if (this->registry_mirror().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registry_mirror().data(), static_cast<int>(this->registry_mirror().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.registry_mirror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->registry_mirror(), output);
  }

  // string docker_daemon_mtu = 4;
  if (this->docker_daemon_mtu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docker_daemon_mtu().data(), static_cast<int>(this->docker_daemon_mtu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.docker_daemon_mtu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->docker_daemon_mtu(), output);
  }

  // .manifest.v1.EstafetteManifest manifest = 5;
  if (this->has_manifest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_manifest(), output);
  }

  // string job_name = 6;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), static_cast<int>(this->job_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->job_name(), output);
  }

  // string release_name = 7;
  if (this->release_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_name().data(), static_cast<int>(this->release_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.release_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->release_name(), output);
  }

  // repeated .manifest.v1.EstafetteEvent events = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->events(static_cast<int>(i)),
      output);
  }

  // .contracts.v1.CIServerConfig ci_server = 9;
  if (this->has_ci_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_ci_server(), output);
  }

  // .contracts.v1.BuildParamsConfig build_params = 10;
  if (this->has_build_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_build_params(), output);
  }

  // .contracts.v1.ReleaseParamsConfig release_params = 11;
  if (this->has_release_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_release_params(), output);
  }

  // .contracts.v1.GitConfig git = 12;
  if (this->has_git()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_git(), output);
  }

  // .contracts.v1.BuildVersionConfig build_version = 13;
  if (this->has_build_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_build_version(), output);
  }

  // repeated .contracts.v1.CredentialConfig credentials = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credentials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->credentials(static_cast<int>(i)),
      output);
  }

  // repeated .contracts.v1.TrustedImageConfig trusted_images = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trusted_images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->trusted_images(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:contracts.v1.BuilderConfig)
}

::google::protobuf::uint8* BuilderConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:contracts.v1.BuilderConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->action(), target);
  }

  // string track = 2;
  if (this->track().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->track().data(), static_cast<int>(this->track().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.track");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->track(), target);
  }

  // string registry_mirror = 3;
  if (this->registry_mirror().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registry_mirror().data(), static_cast<int>(this->registry_mirror().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.registry_mirror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->registry_mirror(), target);
  }

  // string docker_daemon_mtu = 4;
  if (this->docker_daemon_mtu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docker_daemon_mtu().data(), static_cast<int>(this->docker_daemon_mtu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.docker_daemon_mtu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->docker_daemon_mtu(), target);
  }

  // .manifest.v1.EstafetteManifest manifest = 5;
  if (this->has_manifest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_manifest(), deterministic, target);
  }

  // string job_name = 6;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), static_cast<int>(this->job_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->job_name(), target);
  }

  // string release_name = 7;
  if (this->release_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_name().data(), static_cast<int>(this->release_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.BuilderConfig.release_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->release_name(), target);
  }

  // repeated .manifest.v1.EstafetteEvent events = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->events(static_cast<int>(i)), deterministic, target);
  }

  // .contracts.v1.CIServerConfig ci_server = 9;
  if (this->has_ci_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_ci_server(), deterministic, target);
  }

  // .contracts.v1.BuildParamsConfig build_params = 10;
  if (this->has_build_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_build_params(), deterministic, target);
  }

  // .contracts.v1.ReleaseParamsConfig release_params = 11;
  if (this->has_release_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_release_params(), deterministic, target);
  }

  // .contracts.v1.GitConfig git = 12;
  if (this->has_git()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_git(), deterministic, target);
  }

  // .contracts.v1.BuildVersionConfig build_version = 13;
  if (this->has_build_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_build_version(), deterministic, target);
  }

  // repeated .contracts.v1.CredentialConfig credentials = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credentials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->credentials(static_cast<int>(i)), deterministic, target);
  }

  // repeated .contracts.v1.TrustedImageConfig trusted_images = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trusted_images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->trusted_images(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:contracts.v1.BuilderConfig)
  return target;
}

size_t BuilderConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:contracts.v1.BuilderConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manifest.v1.EstafetteEvent events = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // repeated .contracts.v1.CredentialConfig credentials = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->credentials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->credentials(static_cast<int>(i)));
    }
  }

  // repeated .contracts.v1.TrustedImageConfig trusted_images = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->trusted_images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trusted_images(static_cast<int>(i)));
    }
  }

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // string track = 2;
  if (this->track().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->track());
  }

  // string registry_mirror = 3;
  if (this->registry_mirror().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->registry_mirror());
  }

  // string docker_daemon_mtu = 4;
  if (this->docker_daemon_mtu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->docker_daemon_mtu());
  }

  // string job_name = 6;
  if (this->job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_name());
  }

  // string release_name = 7;
  if (this->release_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->release_name());
  }

  // .manifest.v1.EstafetteManifest manifest = 5;
  if (this->has_manifest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *manifest_);
  }

  // .contracts.v1.CIServerConfig ci_server = 9;
  if (this->has_ci_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ci_server_);
  }

  // .contracts.v1.BuildParamsConfig build_params = 10;
  if (this->has_build_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *build_params_);
  }

  // .contracts.v1.ReleaseParamsConfig release_params = 11;
  if (this->has_release_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *release_params_);
  }

  // .contracts.v1.GitConfig git = 12;
  if (this->has_git()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *git_);
  }

  // .contracts.v1.BuildVersionConfig build_version = 13;
  if (this->has_build_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *build_version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuilderConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:contracts.v1.BuilderConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const BuilderConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuilderConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:contracts.v1.BuilderConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:contracts.v1.BuilderConfig)
    MergeFrom(*source);
  }
}

void BuilderConfig::MergeFrom(const BuilderConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:contracts.v1.BuilderConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  credentials_.MergeFrom(from.credentials_);
  trusted_images_.MergeFrom(from.trusted_images_);
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.track().size() > 0) {

    track_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.track_);
  }
  if (from.registry_mirror().size() > 0) {

    registry_mirror_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registry_mirror_);
  }
  if (from.docker_daemon_mtu().size() > 0) {

    docker_daemon_mtu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docker_daemon_mtu_);
  }
  if (from.job_name().size() > 0) {

    job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_name_);
  }
  if (from.release_name().size() > 0) {

    release_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_name_);
  }
  if (from.has_manifest()) {
    mutable_manifest()->::manifest::v1::EstafetteManifest::MergeFrom(from.manifest());
  }
  if (from.has_ci_server()) {
    mutable_ci_server()->::contracts::v1::CIServerConfig::MergeFrom(from.ci_server());
  }
  if (from.has_build_params()) {
    mutable_build_params()->::contracts::v1::BuildParamsConfig::MergeFrom(from.build_params());
  }
  if (from.has_release_params()) {
    mutable_release_params()->::contracts::v1::ReleaseParamsConfig::MergeFrom(from.release_params());
  }
  if (from.has_git()) {
    mutable_git()->::contracts::v1::GitConfig::MergeFrom(from.git());
  }
  if (from.has_build_version()) {
    mutable_build_version()->::contracts::v1::BuildVersionConfig::MergeFrom(from.build_version());
  }
}

void BuilderConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:contracts.v1.BuilderConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuilderConfig::CopyFrom(const BuilderConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:contracts.v1.BuilderConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuilderConfig::IsInitialized() const {
  return true;
}

void BuilderConfig::Swap(BuilderConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuilderConfig::InternalSwap(BuilderConfig* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  CastToBase(&credentials_)->InternalSwap(CastToBase(&other->credentials_));
  CastToBase(&trusted_images_)->InternalSwap(CastToBase(&other->trusted_images_));
  action_.Swap(&other->action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  track_.Swap(&other->track_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registry_mirror_.Swap(&other->registry_mirror_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  docker_daemon_mtu_.Swap(&other->docker_daemon_mtu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  job_name_.Swap(&other->job_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  release_name_.Swap(&other->release_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(manifest_, other->manifest_);
  swap(ci_server_, other->ci_server_);
  swap(build_params_, other->build_params_);
  swap(release_params_, other->release_params_);
  swap(git_, other->git_);
  swap(build_version_, other->build_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BuilderConfig::GetMetadata() const {
  protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::contracts::v1::BuilderConfig* Arena::CreateMaybeMessage< ::contracts::v1::BuilderConfig >(Arena* arena) {
  return Arena::CreateInternal< ::contracts::v1::BuilderConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
