// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/contracts.v1/build_version_config.proto

#ifndef PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto
#define PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto 

namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto
namespace contracts {
namespace v1 {
class BuildVersionConfig;
class BuildVersionConfigDefaultTypeInternal;
extern BuildVersionConfigDefaultTypeInternal _BuildVersionConfig_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> ::contracts::v1::BuildVersionConfig* Arena::CreateMaybeMessage<::contracts::v1::BuildVersionConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace contracts {
namespace v1 {

// ===================================================================

class BuildVersionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contracts.v1.BuildVersionConfig) */ {
 public:
  BuildVersionConfig();
  virtual ~BuildVersionConfig();

  BuildVersionConfig(const BuildVersionConfig& from);

  inline BuildVersionConfig& operator=(const BuildVersionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildVersionConfig(BuildVersionConfig&& from) noexcept
    : BuildVersionConfig() {
    *this = ::std::move(from);
  }

  inline BuildVersionConfig& operator=(BuildVersionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildVersionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildVersionConfig* internal_default_instance() {
    return reinterpret_cast<const BuildVersionConfig*>(
               &_BuildVersionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BuildVersionConfig* other);
  friend void swap(BuildVersionConfig& a, BuildVersionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildVersionConfig* New() const final {
    return CreateMaybeMessage<BuildVersionConfig>(NULL);
  }

  BuildVersionConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BuildVersionConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BuildVersionConfig& from);
  void MergeFrom(const BuildVersionConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuildVersionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string patch = 4;
  void clear_patch();
  static const int kPatchFieldNumber = 4;
  const ::std::string& patch() const;
  void set_patch(const ::std::string& value);
  #if LANG_CXX11
  void set_patch(::std::string&& value);
  #endif
  void set_patch(const char* value);
  void set_patch(const char* value, size_t size);
  ::std::string* mutable_patch();
  ::std::string* release_patch();
  void set_allocated_patch(::std::string* patch);

  // string label = 5;
  void clear_label();
  static const int kLabelFieldNumber = 5;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // int64 major = 2;
  void clear_major();
  static const int kMajorFieldNumber = 2;
  ::google::protobuf::int64 major() const;
  void set_major(::google::protobuf::int64 value);

  // int64 minor = 3;
  void clear_minor();
  static const int kMinorFieldNumber = 3;
  ::google::protobuf::int64 minor() const;
  void set_minor(::google::protobuf::int64 value);

  // int64 auto_increment = 6;
  void clear_auto_increment();
  static const int kAutoIncrementFieldNumber = 6;
  ::google::protobuf::int64 auto_increment() const;
  void set_auto_increment(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:contracts.v1.BuildVersionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr patch_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int64 major_;
  ::google::protobuf::int64 minor_;
  ::google::protobuf::int64 auto_increment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BuildVersionConfig

// string version = 1;
inline void BuildVersionConfig::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildVersionConfig::version() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildVersionConfig.version)
  return version_.GetNoArena();
}
inline void BuildVersionConfig::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuildVersionConfig.version)
}
#if LANG_CXX11
inline void BuildVersionConfig::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuildVersionConfig.version)
}
#endif
inline void BuildVersionConfig::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuildVersionConfig.version)
}
inline void BuildVersionConfig::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuildVersionConfig.version)
}
inline ::std::string* BuildVersionConfig::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuildVersionConfig.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildVersionConfig::release_version() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuildVersionConfig.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildVersionConfig::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuildVersionConfig.version)
}

// int64 major = 2;
inline void BuildVersionConfig::clear_major() {
  major_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BuildVersionConfig::major() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildVersionConfig.major)
  return major_;
}
inline void BuildVersionConfig::set_major(::google::protobuf::int64 value) {
  
  major_ = value;
  // @@protoc_insertion_point(field_set:contracts.v1.BuildVersionConfig.major)
}

// int64 minor = 3;
inline void BuildVersionConfig::clear_minor() {
  minor_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BuildVersionConfig::minor() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildVersionConfig.minor)
  return minor_;
}
inline void BuildVersionConfig::set_minor(::google::protobuf::int64 value) {
  
  minor_ = value;
  // @@protoc_insertion_point(field_set:contracts.v1.BuildVersionConfig.minor)
}

// string patch = 4;
inline void BuildVersionConfig::clear_patch() {
  patch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildVersionConfig::patch() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildVersionConfig.patch)
  return patch_.GetNoArena();
}
inline void BuildVersionConfig::set_patch(const ::std::string& value) {
  
  patch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuildVersionConfig.patch)
}
#if LANG_CXX11
inline void BuildVersionConfig::set_patch(::std::string&& value) {
  
  patch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuildVersionConfig.patch)
}
#endif
inline void BuildVersionConfig::set_patch(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  patch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuildVersionConfig.patch)
}
inline void BuildVersionConfig::set_patch(const char* value, size_t size) {
  
  patch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuildVersionConfig.patch)
}
inline ::std::string* BuildVersionConfig::mutable_patch() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuildVersionConfig.patch)
  return patch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildVersionConfig::release_patch() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuildVersionConfig.patch)
  
  return patch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildVersionConfig::set_allocated_patch(::std::string* patch) {
  if (patch != NULL) {
    
  } else {
    
  }
  patch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), patch);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuildVersionConfig.patch)
}

// string label = 5;
inline void BuildVersionConfig::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildVersionConfig::label() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildVersionConfig.label)
  return label_.GetNoArena();
}
inline void BuildVersionConfig::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuildVersionConfig.label)
}
#if LANG_CXX11
inline void BuildVersionConfig::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuildVersionConfig.label)
}
#endif
inline void BuildVersionConfig::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuildVersionConfig.label)
}
inline void BuildVersionConfig::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuildVersionConfig.label)
}
inline ::std::string* BuildVersionConfig::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuildVersionConfig.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildVersionConfig::release_label() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuildVersionConfig.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildVersionConfig::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuildVersionConfig.label)
}

// int64 auto_increment = 6;
inline void BuildVersionConfig::clear_auto_increment() {
  auto_increment_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BuildVersionConfig::auto_increment() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildVersionConfig.auto_increment)
  return auto_increment_;
}
inline void BuildVersionConfig::set_auto_increment(::google::protobuf::int64 value) {
  
  auto_increment_ = value;
  // @@protoc_insertion_point(field_set:contracts.v1.BuildVersionConfig.auto_increment)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace contracts

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuild_5fversion_5fconfig_2eproto
