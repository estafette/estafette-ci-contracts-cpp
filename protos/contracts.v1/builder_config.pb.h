// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/contracts.v1/builder_config.proto

#ifndef PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto
#define PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protos/contracts.v1/build_params_config.pb.h"
#include "protos/contracts.v1/build_version_config.pb.h"
#include "protos/contracts.v1/ci_server_config.pb.h"
#include "protos/contracts.v1/credential_config.pb.h"
#include "protos/contracts.v1/git_config.pb.h"
#include "protos/contracts.v1/release_params_config.pb.h"
#include "protos/contracts.v1/trusted_image_config.pb.h"
#include "protos/manifest.v1/estafette_event.pb.h"
#include "protos/manifest.v1/estafette_manifest.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto 

namespace protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto
namespace contracts {
namespace v1 {
class BuilderConfig;
class BuilderConfigDefaultTypeInternal;
extern BuilderConfigDefaultTypeInternal _BuilderConfig_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> ::contracts::v1::BuilderConfig* Arena::CreateMaybeMessage<::contracts::v1::BuilderConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace contracts {
namespace v1 {

// ===================================================================

class BuilderConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contracts.v1.BuilderConfig) */ {
 public:
  BuilderConfig();
  virtual ~BuilderConfig();

  BuilderConfig(const BuilderConfig& from);

  inline BuilderConfig& operator=(const BuilderConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuilderConfig(BuilderConfig&& from) noexcept
    : BuilderConfig() {
    *this = ::std::move(from);
  }

  inline BuilderConfig& operator=(BuilderConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuilderConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuilderConfig* internal_default_instance() {
    return reinterpret_cast<const BuilderConfig*>(
               &_BuilderConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BuilderConfig* other);
  friend void swap(BuilderConfig& a, BuilderConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuilderConfig* New() const final {
    return CreateMaybeMessage<BuilderConfig>(NULL);
  }

  BuilderConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BuilderConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BuilderConfig& from);
  void MergeFrom(const BuilderConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuilderConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .manifest.v1.EstafetteEvent events = 8;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 8;
  ::manifest::v1::EstafetteEvent* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteEvent >*
      mutable_events();
  const ::manifest::v1::EstafetteEvent& events(int index) const;
  ::manifest::v1::EstafetteEvent* add_events();
  const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteEvent >&
      events() const;

  // repeated .contracts.v1.CredentialConfig credentials = 14;
  int credentials_size() const;
  void clear_credentials();
  static const int kCredentialsFieldNumber = 14;
  ::contracts::v1::CredentialConfig* mutable_credentials(int index);
  ::google::protobuf::RepeatedPtrField< ::contracts::v1::CredentialConfig >*
      mutable_credentials();
  const ::contracts::v1::CredentialConfig& credentials(int index) const;
  ::contracts::v1::CredentialConfig* add_credentials();
  const ::google::protobuf::RepeatedPtrField< ::contracts::v1::CredentialConfig >&
      credentials() const;

  // repeated .contracts.v1.TrustedImageConfig trusted_images = 15;
  int trusted_images_size() const;
  void clear_trusted_images();
  static const int kTrustedImagesFieldNumber = 15;
  ::contracts::v1::TrustedImageConfig* mutable_trusted_images(int index);
  ::google::protobuf::RepeatedPtrField< ::contracts::v1::TrustedImageConfig >*
      mutable_trusted_images();
  const ::contracts::v1::TrustedImageConfig& trusted_images(int index) const;
  ::contracts::v1::TrustedImageConfig* add_trusted_images();
  const ::google::protobuf::RepeatedPtrField< ::contracts::v1::TrustedImageConfig >&
      trusted_images() const;

  // string action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  #if LANG_CXX11
  void set_action(::std::string&& value);
  #endif
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // string track = 2;
  void clear_track();
  static const int kTrackFieldNumber = 2;
  const ::std::string& track() const;
  void set_track(const ::std::string& value);
  #if LANG_CXX11
  void set_track(::std::string&& value);
  #endif
  void set_track(const char* value);
  void set_track(const char* value, size_t size);
  ::std::string* mutable_track();
  ::std::string* release_track();
  void set_allocated_track(::std::string* track);

  // string registry_mirror = 3;
  void clear_registry_mirror();
  static const int kRegistryMirrorFieldNumber = 3;
  const ::std::string& registry_mirror() const;
  void set_registry_mirror(const ::std::string& value);
  #if LANG_CXX11
  void set_registry_mirror(::std::string&& value);
  #endif
  void set_registry_mirror(const char* value);
  void set_registry_mirror(const char* value, size_t size);
  ::std::string* mutable_registry_mirror();
  ::std::string* release_registry_mirror();
  void set_allocated_registry_mirror(::std::string* registry_mirror);

  // string docker_daemon_mtu = 4;
  void clear_docker_daemon_mtu();
  static const int kDockerDaemonMtuFieldNumber = 4;
  const ::std::string& docker_daemon_mtu() const;
  void set_docker_daemon_mtu(const ::std::string& value);
  #if LANG_CXX11
  void set_docker_daemon_mtu(::std::string&& value);
  #endif
  void set_docker_daemon_mtu(const char* value);
  void set_docker_daemon_mtu(const char* value, size_t size);
  ::std::string* mutable_docker_daemon_mtu();
  ::std::string* release_docker_daemon_mtu();
  void set_allocated_docker_daemon_mtu(::std::string* docker_daemon_mtu);

  // string job_name = 6;
  void clear_job_name();
  static const int kJobNameFieldNumber = 6;
  const ::std::string& job_name() const;
  void set_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_job_name(::std::string&& value);
  #endif
  void set_job_name(const char* value);
  void set_job_name(const char* value, size_t size);
  ::std::string* mutable_job_name();
  ::std::string* release_job_name();
  void set_allocated_job_name(::std::string* job_name);

  // string release_name = 7;
  void clear_release_name();
  static const int kReleaseNameFieldNumber = 7;
  const ::std::string& release_name() const;
  void set_release_name(const ::std::string& value);
  #if LANG_CXX11
  void set_release_name(::std::string&& value);
  #endif
  void set_release_name(const char* value);
  void set_release_name(const char* value, size_t size);
  ::std::string* mutable_release_name();
  ::std::string* release_release_name();
  void set_allocated_release_name(::std::string* release_name);

  // .manifest.v1.EstafetteManifest manifest = 5;
  bool has_manifest() const;
  void clear_manifest();
  static const int kManifestFieldNumber = 5;
  private:
  const ::manifest::v1::EstafetteManifest& _internal_manifest() const;
  public:
  const ::manifest::v1::EstafetteManifest& manifest() const;
  ::manifest::v1::EstafetteManifest* release_manifest();
  ::manifest::v1::EstafetteManifest* mutable_manifest();
  void set_allocated_manifest(::manifest::v1::EstafetteManifest* manifest);

  // .contracts.v1.CIServerConfig ci_server = 9;
  bool has_ci_server() const;
  void clear_ci_server();
  static const int kCiServerFieldNumber = 9;
  private:
  const ::contracts::v1::CIServerConfig& _internal_ci_server() const;
  public:
  const ::contracts::v1::CIServerConfig& ci_server() const;
  ::contracts::v1::CIServerConfig* release_ci_server();
  ::contracts::v1::CIServerConfig* mutable_ci_server();
  void set_allocated_ci_server(::contracts::v1::CIServerConfig* ci_server);

  // .contracts.v1.BuildParamsConfig build_params = 10;
  bool has_build_params() const;
  void clear_build_params();
  static const int kBuildParamsFieldNumber = 10;
  private:
  const ::contracts::v1::BuildParamsConfig& _internal_build_params() const;
  public:
  const ::contracts::v1::BuildParamsConfig& build_params() const;
  ::contracts::v1::BuildParamsConfig* release_build_params();
  ::contracts::v1::BuildParamsConfig* mutable_build_params();
  void set_allocated_build_params(::contracts::v1::BuildParamsConfig* build_params);

  // .contracts.v1.ReleaseParamsConfig release_params = 11;
  bool has_release_params() const;
  void clear_release_params();
  static const int kReleaseParamsFieldNumber = 11;
  private:
  const ::contracts::v1::ReleaseParamsConfig& _internal_release_params() const;
  public:
  const ::contracts::v1::ReleaseParamsConfig& release_params() const;
  ::contracts::v1::ReleaseParamsConfig* release_release_params();
  ::contracts::v1::ReleaseParamsConfig* mutable_release_params();
  void set_allocated_release_params(::contracts::v1::ReleaseParamsConfig* release_params);

  // .contracts.v1.GitConfig git = 12;
  bool has_git() const;
  void clear_git();
  static const int kGitFieldNumber = 12;
  private:
  const ::contracts::v1::GitConfig& _internal_git() const;
  public:
  const ::contracts::v1::GitConfig& git() const;
  ::contracts::v1::GitConfig* release_git();
  ::contracts::v1::GitConfig* mutable_git();
  void set_allocated_git(::contracts::v1::GitConfig* git);

  // .contracts.v1.BuildVersionConfig build_version = 13;
  bool has_build_version() const;
  void clear_build_version();
  static const int kBuildVersionFieldNumber = 13;
  private:
  const ::contracts::v1::BuildVersionConfig& _internal_build_version() const;
  public:
  const ::contracts::v1::BuildVersionConfig& build_version() const;
  ::contracts::v1::BuildVersionConfig* release_build_version();
  ::contracts::v1::BuildVersionConfig* mutable_build_version();
  void set_allocated_build_version(::contracts::v1::BuildVersionConfig* build_version);

  // @@protoc_insertion_point(class_scope:contracts.v1.BuilderConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteEvent > events_;
  ::google::protobuf::RepeatedPtrField< ::contracts::v1::CredentialConfig > credentials_;
  ::google::protobuf::RepeatedPtrField< ::contracts::v1::TrustedImageConfig > trusted_images_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::internal::ArenaStringPtr track_;
  ::google::protobuf::internal::ArenaStringPtr registry_mirror_;
  ::google::protobuf::internal::ArenaStringPtr docker_daemon_mtu_;
  ::google::protobuf::internal::ArenaStringPtr job_name_;
  ::google::protobuf::internal::ArenaStringPtr release_name_;
  ::manifest::v1::EstafetteManifest* manifest_;
  ::contracts::v1::CIServerConfig* ci_server_;
  ::contracts::v1::BuildParamsConfig* build_params_;
  ::contracts::v1::ReleaseParamsConfig* release_params_;
  ::contracts::v1::GitConfig* git_;
  ::contracts::v1::BuildVersionConfig* build_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BuilderConfig

// string action = 1;
inline void BuilderConfig::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuilderConfig::action() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.action)
  return action_.GetNoArena();
}
inline void BuilderConfig::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuilderConfig.action)
}
#if LANG_CXX11
inline void BuilderConfig::set_action(::std::string&& value) {
  
  action_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuilderConfig.action)
}
#endif
inline void BuilderConfig::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuilderConfig.action)
}
inline void BuilderConfig::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuilderConfig.action)
}
inline ::std::string* BuilderConfig::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuilderConfig::release_action() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuilderConfig::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.action)
}

// string track = 2;
inline void BuilderConfig::clear_track() {
  track_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuilderConfig::track() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.track)
  return track_.GetNoArena();
}
inline void BuilderConfig::set_track(const ::std::string& value) {
  
  track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuilderConfig.track)
}
#if LANG_CXX11
inline void BuilderConfig::set_track(::std::string&& value) {
  
  track_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuilderConfig.track)
}
#endif
inline void BuilderConfig::set_track(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuilderConfig.track)
}
inline void BuilderConfig::set_track(const char* value, size_t size) {
  
  track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuilderConfig.track)
}
inline ::std::string* BuilderConfig::mutable_track() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.track)
  return track_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuilderConfig::release_track() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.track)
  
  return track_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuilderConfig::set_allocated_track(::std::string* track) {
  if (track != NULL) {
    
  } else {
    
  }
  track_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), track);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.track)
}

// string registry_mirror = 3;
inline void BuilderConfig::clear_registry_mirror() {
  registry_mirror_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuilderConfig::registry_mirror() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.registry_mirror)
  return registry_mirror_.GetNoArena();
}
inline void BuilderConfig::set_registry_mirror(const ::std::string& value) {
  
  registry_mirror_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuilderConfig.registry_mirror)
}
#if LANG_CXX11
inline void BuilderConfig::set_registry_mirror(::std::string&& value) {
  
  registry_mirror_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuilderConfig.registry_mirror)
}
#endif
inline void BuilderConfig::set_registry_mirror(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  registry_mirror_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuilderConfig.registry_mirror)
}
inline void BuilderConfig::set_registry_mirror(const char* value, size_t size) {
  
  registry_mirror_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuilderConfig.registry_mirror)
}
inline ::std::string* BuilderConfig::mutable_registry_mirror() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.registry_mirror)
  return registry_mirror_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuilderConfig::release_registry_mirror() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.registry_mirror)
  
  return registry_mirror_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuilderConfig::set_allocated_registry_mirror(::std::string* registry_mirror) {
  if (registry_mirror != NULL) {
    
  } else {
    
  }
  registry_mirror_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), registry_mirror);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.registry_mirror)
}

// string docker_daemon_mtu = 4;
inline void BuilderConfig::clear_docker_daemon_mtu() {
  docker_daemon_mtu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuilderConfig::docker_daemon_mtu() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.docker_daemon_mtu)
  return docker_daemon_mtu_.GetNoArena();
}
inline void BuilderConfig::set_docker_daemon_mtu(const ::std::string& value) {
  
  docker_daemon_mtu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuilderConfig.docker_daemon_mtu)
}
#if LANG_CXX11
inline void BuilderConfig::set_docker_daemon_mtu(::std::string&& value) {
  
  docker_daemon_mtu_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuilderConfig.docker_daemon_mtu)
}
#endif
inline void BuilderConfig::set_docker_daemon_mtu(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  docker_daemon_mtu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuilderConfig.docker_daemon_mtu)
}
inline void BuilderConfig::set_docker_daemon_mtu(const char* value, size_t size) {
  
  docker_daemon_mtu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuilderConfig.docker_daemon_mtu)
}
inline ::std::string* BuilderConfig::mutable_docker_daemon_mtu() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.docker_daemon_mtu)
  return docker_daemon_mtu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuilderConfig::release_docker_daemon_mtu() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.docker_daemon_mtu)
  
  return docker_daemon_mtu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuilderConfig::set_allocated_docker_daemon_mtu(::std::string* docker_daemon_mtu) {
  if (docker_daemon_mtu != NULL) {
    
  } else {
    
  }
  docker_daemon_mtu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docker_daemon_mtu);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.docker_daemon_mtu)
}

// .manifest.v1.EstafetteManifest manifest = 5;
inline bool BuilderConfig::has_manifest() const {
  return this != internal_default_instance() && manifest_ != NULL;
}
inline const ::manifest::v1::EstafetteManifest& BuilderConfig::_internal_manifest() const {
  return *manifest_;
}
inline const ::manifest::v1::EstafetteManifest& BuilderConfig::manifest() const {
  const ::manifest::v1::EstafetteManifest* p = manifest_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.manifest)
  return p != NULL ? *p : *reinterpret_cast<const ::manifest::v1::EstafetteManifest*>(
      &::manifest::v1::_EstafetteManifest_default_instance_);
}
inline ::manifest::v1::EstafetteManifest* BuilderConfig::release_manifest() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.manifest)
  
  ::manifest::v1::EstafetteManifest* temp = manifest_;
  manifest_ = NULL;
  return temp;
}
inline ::manifest::v1::EstafetteManifest* BuilderConfig::mutable_manifest() {
  
  if (manifest_ == NULL) {
    auto* p = CreateMaybeMessage<::manifest::v1::EstafetteManifest>(GetArenaNoVirtual());
    manifest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.manifest)
  return manifest_;
}
inline void BuilderConfig::set_allocated_manifest(::manifest::v1::EstafetteManifest* manifest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(manifest_);
  }
  if (manifest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manifest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manifest, submessage_arena);
    }
    
  } else {
    
  }
  manifest_ = manifest;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.manifest)
}

// string job_name = 6;
inline void BuilderConfig::clear_job_name() {
  job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuilderConfig::job_name() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.job_name)
  return job_name_.GetNoArena();
}
inline void BuilderConfig::set_job_name(const ::std::string& value) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuilderConfig.job_name)
}
#if LANG_CXX11
inline void BuilderConfig::set_job_name(::std::string&& value) {
  
  job_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuilderConfig.job_name)
}
#endif
inline void BuilderConfig::set_job_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuilderConfig.job_name)
}
inline void BuilderConfig::set_job_name(const char* value, size_t size) {
  
  job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuilderConfig.job_name)
}
inline ::std::string* BuilderConfig::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.job_name)
  return job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuilderConfig::release_job_name() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.job_name)
  
  return job_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuilderConfig::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.job_name)
}

// string release_name = 7;
inline void BuilderConfig::clear_release_name() {
  release_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuilderConfig::release_name() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.release_name)
  return release_name_.GetNoArena();
}
inline void BuilderConfig::set_release_name(const ::std::string& value) {
  
  release_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuilderConfig.release_name)
}
#if LANG_CXX11
inline void BuilderConfig::set_release_name(::std::string&& value) {
  
  release_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuilderConfig.release_name)
}
#endif
inline void BuilderConfig::set_release_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  release_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuilderConfig.release_name)
}
inline void BuilderConfig::set_release_name(const char* value, size_t size) {
  
  release_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuilderConfig.release_name)
}
inline ::std::string* BuilderConfig::mutable_release_name() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.release_name)
  return release_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuilderConfig::release_release_name() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.release_name)
  
  return release_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuilderConfig::set_allocated_release_name(::std::string* release_name) {
  if (release_name != NULL) {
    
  } else {
    
  }
  release_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), release_name);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.release_name)
}

// repeated .manifest.v1.EstafetteEvent events = 8;
inline int BuilderConfig::events_size() const {
  return events_.size();
}
inline ::manifest::v1::EstafetteEvent* BuilderConfig::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.events)
  return events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteEvent >*
BuilderConfig::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:contracts.v1.BuilderConfig.events)
  return &events_;
}
inline const ::manifest::v1::EstafetteEvent& BuilderConfig::events(int index) const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.events)
  return events_.Get(index);
}
inline ::manifest::v1::EstafetteEvent* BuilderConfig::add_events() {
  // @@protoc_insertion_point(field_add:contracts.v1.BuilderConfig.events)
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteEvent >&
BuilderConfig::events() const {
  // @@protoc_insertion_point(field_list:contracts.v1.BuilderConfig.events)
  return events_;
}

// .contracts.v1.CIServerConfig ci_server = 9;
inline bool BuilderConfig::has_ci_server() const {
  return this != internal_default_instance() && ci_server_ != NULL;
}
inline const ::contracts::v1::CIServerConfig& BuilderConfig::_internal_ci_server() const {
  return *ci_server_;
}
inline const ::contracts::v1::CIServerConfig& BuilderConfig::ci_server() const {
  const ::contracts::v1::CIServerConfig* p = ci_server_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.ci_server)
  return p != NULL ? *p : *reinterpret_cast<const ::contracts::v1::CIServerConfig*>(
      &::contracts::v1::_CIServerConfig_default_instance_);
}
inline ::contracts::v1::CIServerConfig* BuilderConfig::release_ci_server() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.ci_server)
  
  ::contracts::v1::CIServerConfig* temp = ci_server_;
  ci_server_ = NULL;
  return temp;
}
inline ::contracts::v1::CIServerConfig* BuilderConfig::mutable_ci_server() {
  
  if (ci_server_ == NULL) {
    auto* p = CreateMaybeMessage<::contracts::v1::CIServerConfig>(GetArenaNoVirtual());
    ci_server_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.ci_server)
  return ci_server_;
}
inline void BuilderConfig::set_allocated_ci_server(::contracts::v1::CIServerConfig* ci_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ci_server_);
  }
  if (ci_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ci_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ci_server, submessage_arena);
    }
    
  } else {
    
  }
  ci_server_ = ci_server;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.ci_server)
}

// .contracts.v1.BuildParamsConfig build_params = 10;
inline bool BuilderConfig::has_build_params() const {
  return this != internal_default_instance() && build_params_ != NULL;
}
inline const ::contracts::v1::BuildParamsConfig& BuilderConfig::_internal_build_params() const {
  return *build_params_;
}
inline const ::contracts::v1::BuildParamsConfig& BuilderConfig::build_params() const {
  const ::contracts::v1::BuildParamsConfig* p = build_params_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.build_params)
  return p != NULL ? *p : *reinterpret_cast<const ::contracts::v1::BuildParamsConfig*>(
      &::contracts::v1::_BuildParamsConfig_default_instance_);
}
inline ::contracts::v1::BuildParamsConfig* BuilderConfig::release_build_params() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.build_params)
  
  ::contracts::v1::BuildParamsConfig* temp = build_params_;
  build_params_ = NULL;
  return temp;
}
inline ::contracts::v1::BuildParamsConfig* BuilderConfig::mutable_build_params() {
  
  if (build_params_ == NULL) {
    auto* p = CreateMaybeMessage<::contracts::v1::BuildParamsConfig>(GetArenaNoVirtual());
    build_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.build_params)
  return build_params_;
}
inline void BuilderConfig::set_allocated_build_params(::contracts::v1::BuildParamsConfig* build_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(build_params_);
  }
  if (build_params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build_params, submessage_arena);
    }
    
  } else {
    
  }
  build_params_ = build_params;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.build_params)
}

// .contracts.v1.ReleaseParamsConfig release_params = 11;
inline bool BuilderConfig::has_release_params() const {
  return this != internal_default_instance() && release_params_ != NULL;
}
inline const ::contracts::v1::ReleaseParamsConfig& BuilderConfig::_internal_release_params() const {
  return *release_params_;
}
inline const ::contracts::v1::ReleaseParamsConfig& BuilderConfig::release_params() const {
  const ::contracts::v1::ReleaseParamsConfig* p = release_params_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.release_params)
  return p != NULL ? *p : *reinterpret_cast<const ::contracts::v1::ReleaseParamsConfig*>(
      &::contracts::v1::_ReleaseParamsConfig_default_instance_);
}
inline ::contracts::v1::ReleaseParamsConfig* BuilderConfig::release_release_params() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.release_params)
  
  ::contracts::v1::ReleaseParamsConfig* temp = release_params_;
  release_params_ = NULL;
  return temp;
}
inline ::contracts::v1::ReleaseParamsConfig* BuilderConfig::mutable_release_params() {
  
  if (release_params_ == NULL) {
    auto* p = CreateMaybeMessage<::contracts::v1::ReleaseParamsConfig>(GetArenaNoVirtual());
    release_params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.release_params)
  return release_params_;
}
inline void BuilderConfig::set_allocated_release_params(::contracts::v1::ReleaseParamsConfig* release_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(release_params_);
  }
  if (release_params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      release_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, release_params, submessage_arena);
    }
    
  } else {
    
  }
  release_params_ = release_params;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.release_params)
}

// .contracts.v1.GitConfig git = 12;
inline bool BuilderConfig::has_git() const {
  return this != internal_default_instance() && git_ != NULL;
}
inline const ::contracts::v1::GitConfig& BuilderConfig::_internal_git() const {
  return *git_;
}
inline const ::contracts::v1::GitConfig& BuilderConfig::git() const {
  const ::contracts::v1::GitConfig* p = git_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.git)
  return p != NULL ? *p : *reinterpret_cast<const ::contracts::v1::GitConfig*>(
      &::contracts::v1::_GitConfig_default_instance_);
}
inline ::contracts::v1::GitConfig* BuilderConfig::release_git() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.git)
  
  ::contracts::v1::GitConfig* temp = git_;
  git_ = NULL;
  return temp;
}
inline ::contracts::v1::GitConfig* BuilderConfig::mutable_git() {
  
  if (git_ == NULL) {
    auto* p = CreateMaybeMessage<::contracts::v1::GitConfig>(GetArenaNoVirtual());
    git_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.git)
  return git_;
}
inline void BuilderConfig::set_allocated_git(::contracts::v1::GitConfig* git) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(git_);
  }
  if (git) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      git = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, git, submessage_arena);
    }
    
  } else {
    
  }
  git_ = git;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.git)
}

// .contracts.v1.BuildVersionConfig build_version = 13;
inline bool BuilderConfig::has_build_version() const {
  return this != internal_default_instance() && build_version_ != NULL;
}
inline const ::contracts::v1::BuildVersionConfig& BuilderConfig::_internal_build_version() const {
  return *build_version_;
}
inline const ::contracts::v1::BuildVersionConfig& BuilderConfig::build_version() const {
  const ::contracts::v1::BuildVersionConfig* p = build_version_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.build_version)
  return p != NULL ? *p : *reinterpret_cast<const ::contracts::v1::BuildVersionConfig*>(
      &::contracts::v1::_BuildVersionConfig_default_instance_);
}
inline ::contracts::v1::BuildVersionConfig* BuilderConfig::release_build_version() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuilderConfig.build_version)
  
  ::contracts::v1::BuildVersionConfig* temp = build_version_;
  build_version_ = NULL;
  return temp;
}
inline ::contracts::v1::BuildVersionConfig* BuilderConfig::mutable_build_version() {
  
  if (build_version_ == NULL) {
    auto* p = CreateMaybeMessage<::contracts::v1::BuildVersionConfig>(GetArenaNoVirtual());
    build_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.build_version)
  return build_version_;
}
inline void BuilderConfig::set_allocated_build_version(::contracts::v1::BuildVersionConfig* build_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(build_version_);
  }
  if (build_version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build_version, submessage_arena);
    }
    
  } else {
    
  }
  build_version_ = build_version;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuilderConfig.build_version)
}

// repeated .contracts.v1.CredentialConfig credentials = 14;
inline int BuilderConfig::credentials_size() const {
  return credentials_.size();
}
inline ::contracts::v1::CredentialConfig* BuilderConfig::mutable_credentials(int index) {
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.credentials)
  return credentials_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::contracts::v1::CredentialConfig >*
BuilderConfig::mutable_credentials() {
  // @@protoc_insertion_point(field_mutable_list:contracts.v1.BuilderConfig.credentials)
  return &credentials_;
}
inline const ::contracts::v1::CredentialConfig& BuilderConfig::credentials(int index) const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.credentials)
  return credentials_.Get(index);
}
inline ::contracts::v1::CredentialConfig* BuilderConfig::add_credentials() {
  // @@protoc_insertion_point(field_add:contracts.v1.BuilderConfig.credentials)
  return credentials_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::contracts::v1::CredentialConfig >&
BuilderConfig::credentials() const {
  // @@protoc_insertion_point(field_list:contracts.v1.BuilderConfig.credentials)
  return credentials_;
}

// repeated .contracts.v1.TrustedImageConfig trusted_images = 15;
inline int BuilderConfig::trusted_images_size() const {
  return trusted_images_.size();
}
inline ::contracts::v1::TrustedImageConfig* BuilderConfig::mutable_trusted_images(int index) {
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuilderConfig.trusted_images)
  return trusted_images_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::contracts::v1::TrustedImageConfig >*
BuilderConfig::mutable_trusted_images() {
  // @@protoc_insertion_point(field_mutable_list:contracts.v1.BuilderConfig.trusted_images)
  return &trusted_images_;
}
inline const ::contracts::v1::TrustedImageConfig& BuilderConfig::trusted_images(int index) const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuilderConfig.trusted_images)
  return trusted_images_.Get(index);
}
inline ::contracts::v1::TrustedImageConfig* BuilderConfig::add_trusted_images() {
  // @@protoc_insertion_point(field_add:contracts.v1.BuilderConfig.trusted_images)
  return trusted_images_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::contracts::v1::TrustedImageConfig >&
BuilderConfig::trusted_images() const {
  // @@protoc_insertion_point(field_list:contracts.v1.BuilderConfig.trusted_images)
  return trusted_images_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace contracts

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuilder_5fconfig_2eproto
