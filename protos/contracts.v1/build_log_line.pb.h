// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/contracts.v1/build_log_line.proto

#ifndef PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto
#define PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto 

namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto
namespace contracts {
namespace v1 {
class BuildLogLine;
class BuildLogLineDefaultTypeInternal;
extern BuildLogLineDefaultTypeInternal _BuildLogLine_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> ::contracts::v1::BuildLogLine* Arena::CreateMaybeMessage<::contracts::v1::BuildLogLine>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace contracts {
namespace v1 {

// ===================================================================

class BuildLogLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contracts.v1.BuildLogLine) */ {
 public:
  BuildLogLine();
  virtual ~BuildLogLine();

  BuildLogLine(const BuildLogLine& from);

  inline BuildLogLine& operator=(const BuildLogLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildLogLine(BuildLogLine&& from) noexcept
    : BuildLogLine() {
    *this = ::std::move(from);
  }

  inline BuildLogLine& operator=(BuildLogLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildLogLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildLogLine* internal_default_instance() {
    return reinterpret_cast<const BuildLogLine*>(
               &_BuildLogLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BuildLogLine* other);
  friend void swap(BuildLogLine& a, BuildLogLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildLogLine* New() const final {
    return CreateMaybeMessage<BuildLogLine>(NULL);
  }

  BuildLogLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BuildLogLine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BuildLogLine& from);
  void MergeFrom(const BuildLogLine& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuildLogLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string stream_type = 3;
  void clear_stream_type();
  static const int kStreamTypeFieldNumber = 3;
  const ::std::string& stream_type() const;
  void set_stream_type(const ::std::string& value);
  #if LANG_CXX11
  void set_stream_type(::std::string&& value);
  #endif
  void set_stream_type(const char* value);
  void set_stream_type(const char* value, size_t size);
  ::std::string* mutable_stream_type();
  ::std::string* release_stream_type();
  void set_allocated_stream_type(::std::string* stream_type);

  // string text = 4;
  void clear_text();
  static const int kTextFieldNumber = 4;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  public:
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // int64 line_number = 1;
  void clear_line_number();
  static const int kLineNumberFieldNumber = 1;
  ::google::protobuf::int64 line_number() const;
  void set_line_number(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:contracts.v1.BuildLogLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stream_type_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::Timestamp* timestamp_;
  ::google::protobuf::int64 line_number_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BuildLogLine

// int64 line_number = 1;
inline void BuildLogLine::clear_line_number() {
  line_number_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BuildLogLine::line_number() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildLogLine.line_number)
  return line_number_;
}
inline void BuildLogLine::set_line_number(::google::protobuf::int64 value) {
  
  line_number_ = value;
  // @@protoc_insertion_point(field_set:contracts.v1.BuildLogLine.line_number)
}

// .google.protobuf.Timestamp timestamp = 2;
inline bool BuildLogLine::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::google::protobuf::Timestamp& BuildLogLine::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::google::protobuf::Timestamp& BuildLogLine::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:contracts.v1.BuildLogLine.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* BuildLogLine::release_timestamp() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuildLogLine.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BuildLogLine::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuildLogLine.timestamp)
  return timestamp_;
}
inline void BuildLogLine::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuildLogLine.timestamp)
}

// string stream_type = 3;
inline void BuildLogLine::clear_stream_type() {
  stream_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildLogLine::stream_type() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildLogLine.stream_type)
  return stream_type_.GetNoArena();
}
inline void BuildLogLine::set_stream_type(const ::std::string& value) {
  
  stream_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuildLogLine.stream_type)
}
#if LANG_CXX11
inline void BuildLogLine::set_stream_type(::std::string&& value) {
  
  stream_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuildLogLine.stream_type)
}
#endif
inline void BuildLogLine::set_stream_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stream_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuildLogLine.stream_type)
}
inline void BuildLogLine::set_stream_type(const char* value, size_t size) {
  
  stream_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuildLogLine.stream_type)
}
inline ::std::string* BuildLogLine::mutable_stream_type() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuildLogLine.stream_type)
  return stream_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildLogLine::release_stream_type() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuildLogLine.stream_type)
  
  return stream_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildLogLine::set_allocated_stream_type(::std::string* stream_type) {
  if (stream_type != NULL) {
    
  } else {
    
  }
  stream_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stream_type);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuildLogLine.stream_type)
}

// string text = 4;
inline void BuildLogLine::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildLogLine::text() const {
  // @@protoc_insertion_point(field_get:contracts.v1.BuildLogLine.text)
  return text_.GetNoArena();
}
inline void BuildLogLine::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contracts.v1.BuildLogLine.text)
}
#if LANG_CXX11
inline void BuildLogLine::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contracts.v1.BuildLogLine.text)
}
#endif
inline void BuildLogLine::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contracts.v1.BuildLogLine.text)
}
inline void BuildLogLine::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contracts.v1.BuildLogLine.text)
}
inline ::std::string* BuildLogLine::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:contracts.v1.BuildLogLine.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildLogLine::release_text() {
  // @@protoc_insertion_point(field_release:contracts.v1.BuildLogLine.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildLogLine::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:contracts.v1.BuildLogLine.text)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace contracts

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fcontracts_2ev1_2fbuild_5flog_5fline_2eproto
