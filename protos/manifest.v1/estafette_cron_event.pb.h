// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/manifest.v1/estafette_cron_event.proto

#ifndef PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto
#define PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto 

namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto
namespace manifest {
namespace v1 {
class EstafetteCronEvent;
class EstafetteCronEventDefaultTypeInternal;
extern EstafetteCronEventDefaultTypeInternal _EstafetteCronEvent_default_instance_;
}  // namespace v1
}  // namespace manifest
namespace google {
namespace protobuf {
template<> ::manifest::v1::EstafetteCronEvent* Arena::CreateMaybeMessage<::manifest::v1::EstafetteCronEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace manifest {
namespace v1 {

// ===================================================================

class EstafetteCronEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:manifest.v1.EstafetteCronEvent) */ {
 public:
  EstafetteCronEvent();
  virtual ~EstafetteCronEvent();

  EstafetteCronEvent(const EstafetteCronEvent& from);

  inline EstafetteCronEvent& operator=(const EstafetteCronEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EstafetteCronEvent(EstafetteCronEvent&& from) noexcept
    : EstafetteCronEvent() {
    *this = ::std::move(from);
  }

  inline EstafetteCronEvent& operator=(EstafetteCronEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EstafetteCronEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EstafetteCronEvent* internal_default_instance() {
    return reinterpret_cast<const EstafetteCronEvent*>(
               &_EstafetteCronEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EstafetteCronEvent* other);
  friend void swap(EstafetteCronEvent& a, EstafetteCronEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EstafetteCronEvent* New() const final {
    return CreateMaybeMessage<EstafetteCronEvent>(NULL);
  }

  EstafetteCronEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EstafetteCronEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EstafetteCronEvent& from);
  void MergeFrom(const EstafetteCronEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EstafetteCronEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  public:
  const ::google::protobuf::Timestamp& time() const;
  ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* time);

  // @@protoc_insertion_point(class_scope:manifest.v1.EstafetteCronEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EstafetteCronEvent

// .google.protobuf.Timestamp time = 1;
inline bool EstafetteCronEvent::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
inline const ::google::protobuf::Timestamp& EstafetteCronEvent::_internal_time() const {
  return *time_;
}
inline const ::google::protobuf::Timestamp& EstafetteCronEvent::time() const {
  const ::google::protobuf::Timestamp* p = time_;
  // @@protoc_insertion_point(field_get:manifest.v1.EstafetteCronEvent.time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* EstafetteCronEvent::release_time() {
  // @@protoc_insertion_point(field_release:manifest.v1.EstafetteCronEvent.time)
  
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* EstafetteCronEvent::mutable_time() {
  
  if (time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:manifest.v1.EstafetteCronEvent.time)
  return time_;
}
inline void EstafetteCronEvent::set_allocated_time(::google::protobuf::Timestamp* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_);
  }
  if (time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(time)->GetArena();
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    
  } else {
    
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:manifest.v1.EstafetteCronEvent.time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace manifest

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2festafette_5fcron_5fevent_2eproto
