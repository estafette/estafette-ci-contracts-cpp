// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/manifest.v1/estafette_manifest.proto

#ifndef PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto
#define PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "protos/manifest.v1/estafette_builder.pb.h"
#include "protos/manifest.v1/estafette_release.pb.h"
#include "protos/manifest.v1/estafette_stage.pb.h"
#include "protos/manifest.v1/estafette_trigger.pb.h"
#include "protos/manifest.v1/estafette_version.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto 

namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto
namespace manifest {
namespace v1 {
class EstafetteManifest;
class EstafetteManifestDefaultTypeInternal;
extern EstafetteManifestDefaultTypeInternal _EstafetteManifest_default_instance_;
class EstafetteManifest_GlobalEnvVarsEntry_DoNotUse;
class EstafetteManifest_GlobalEnvVarsEntry_DoNotUseDefaultTypeInternal;
extern EstafetteManifest_GlobalEnvVarsEntry_DoNotUseDefaultTypeInternal _EstafetteManifest_GlobalEnvVarsEntry_DoNotUse_default_instance_;
class EstafetteManifest_LabelsEntry_DoNotUse;
class EstafetteManifest_LabelsEntry_DoNotUseDefaultTypeInternal;
extern EstafetteManifest_LabelsEntry_DoNotUseDefaultTypeInternal _EstafetteManifest_LabelsEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace manifest
namespace google {
namespace protobuf {
template<> ::manifest::v1::EstafetteManifest* Arena::CreateMaybeMessage<::manifest::v1::EstafetteManifest>(Arena*);
template<> ::manifest::v1::EstafetteManifest_GlobalEnvVarsEntry_DoNotUse* Arena::CreateMaybeMessage<::manifest::v1::EstafetteManifest_GlobalEnvVarsEntry_DoNotUse>(Arena*);
template<> ::manifest::v1::EstafetteManifest_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::manifest::v1::EstafetteManifest_LabelsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace manifest {
namespace v1 {

// ===================================================================

class EstafetteManifest_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<EstafetteManifest_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<EstafetteManifest_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  EstafetteManifest_LabelsEntry_DoNotUse();
  EstafetteManifest_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const EstafetteManifest_LabelsEntry_DoNotUse& other);
  static const EstafetteManifest_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const EstafetteManifest_LabelsEntry_DoNotUse*>(&_EstafetteManifest_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class EstafetteManifest_GlobalEnvVarsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<EstafetteManifest_GlobalEnvVarsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<EstafetteManifest_GlobalEnvVarsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  EstafetteManifest_GlobalEnvVarsEntry_DoNotUse();
  EstafetteManifest_GlobalEnvVarsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const EstafetteManifest_GlobalEnvVarsEntry_DoNotUse& other);
  static const EstafetteManifest_GlobalEnvVarsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const EstafetteManifest_GlobalEnvVarsEntry_DoNotUse*>(&_EstafetteManifest_GlobalEnvVarsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class EstafetteManifest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:manifest.v1.EstafetteManifest) */ {
 public:
  EstafetteManifest();
  virtual ~EstafetteManifest();

  EstafetteManifest(const EstafetteManifest& from);

  inline EstafetteManifest& operator=(const EstafetteManifest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EstafetteManifest(EstafetteManifest&& from) noexcept
    : EstafetteManifest() {
    *this = ::std::move(from);
  }

  inline EstafetteManifest& operator=(EstafetteManifest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EstafetteManifest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EstafetteManifest* internal_default_instance() {
    return reinterpret_cast<const EstafetteManifest*>(
               &_EstafetteManifest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(EstafetteManifest* other);
  friend void swap(EstafetteManifest& a, EstafetteManifest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EstafetteManifest* New() const final {
    return CreateMaybeMessage<EstafetteManifest>(NULL);
  }

  EstafetteManifest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EstafetteManifest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EstafetteManifest& from);
  void MergeFrom(const EstafetteManifest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EstafetteManifest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 2;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // map<string, string> global_env_vars = 4;
  int global_env_vars_size() const;
  void clear_global_env_vars();
  static const int kGlobalEnvVarsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      global_env_vars() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_global_env_vars();

  // repeated .manifest.v1.EstafetteTrigger triggers = 5;
  int triggers_size() const;
  void clear_triggers();
  static const int kTriggersFieldNumber = 5;
  ::manifest::v1::EstafetteTrigger* mutable_triggers(int index);
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteTrigger >*
      mutable_triggers();
  const ::manifest::v1::EstafetteTrigger& triggers(int index) const;
  ::manifest::v1::EstafetteTrigger* add_triggers();
  const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteTrigger >&
      triggers() const;

  // repeated .manifest.v1.EstafetteStage stages = 6;
  int stages_size() const;
  void clear_stages();
  static const int kStagesFieldNumber = 6;
  ::manifest::v1::EstafetteStage* mutable_stages(int index);
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteStage >*
      mutable_stages();
  const ::manifest::v1::EstafetteStage& stages(int index) const;
  ::manifest::v1::EstafetteStage* add_stages();
  const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteStage >&
      stages() const;

  // repeated .manifest.v1.EstafetteRelease releases = 7;
  int releases_size() const;
  void clear_releases();
  static const int kReleasesFieldNumber = 7;
  ::manifest::v1::EstafetteRelease* mutable_releases(int index);
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteRelease >*
      mutable_releases();
  const ::manifest::v1::EstafetteRelease& releases(int index) const;
  ::manifest::v1::EstafetteRelease* add_releases();
  const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteRelease >&
      releases() const;

  // .manifest.v1.EstafetteBuilder builder = 1;
  bool has_builder() const;
  void clear_builder();
  static const int kBuilderFieldNumber = 1;
  private:
  const ::manifest::v1::EstafetteBuilder& _internal_builder() const;
  public:
  const ::manifest::v1::EstafetteBuilder& builder() const;
  ::manifest::v1::EstafetteBuilder* release_builder();
  ::manifest::v1::EstafetteBuilder* mutable_builder();
  void set_allocated_builder(::manifest::v1::EstafetteBuilder* builder);

  // .manifest.v1.EstafetteVersion version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  private:
  const ::manifest::v1::EstafetteVersion& _internal_version() const;
  public:
  const ::manifest::v1::EstafetteVersion& version() const;
  ::manifest::v1::EstafetteVersion* release_version();
  ::manifest::v1::EstafetteVersion* mutable_version();
  void set_allocated_version(::manifest::v1::EstafetteVersion* version);

  // @@protoc_insertion_point(class_scope:manifest.v1.EstafetteManifest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      EstafetteManifest_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::internal::MapField<
      EstafetteManifest_GlobalEnvVarsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > global_env_vars_;
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteTrigger > triggers_;
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteStage > stages_;
  ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteRelease > releases_;
  ::manifest::v1::EstafetteBuilder* builder_;
  ::manifest::v1::EstafetteVersion* version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EstafetteManifest

// .manifest.v1.EstafetteBuilder builder = 1;
inline bool EstafetteManifest::has_builder() const {
  return this != internal_default_instance() && builder_ != NULL;
}
inline const ::manifest::v1::EstafetteBuilder& EstafetteManifest::_internal_builder() const {
  return *builder_;
}
inline const ::manifest::v1::EstafetteBuilder& EstafetteManifest::builder() const {
  const ::manifest::v1::EstafetteBuilder* p = builder_;
  // @@protoc_insertion_point(field_get:manifest.v1.EstafetteManifest.builder)
  return p != NULL ? *p : *reinterpret_cast<const ::manifest::v1::EstafetteBuilder*>(
      &::manifest::v1::_EstafetteBuilder_default_instance_);
}
inline ::manifest::v1::EstafetteBuilder* EstafetteManifest::release_builder() {
  // @@protoc_insertion_point(field_release:manifest.v1.EstafetteManifest.builder)
  
  ::manifest::v1::EstafetteBuilder* temp = builder_;
  builder_ = NULL;
  return temp;
}
inline ::manifest::v1::EstafetteBuilder* EstafetteManifest::mutable_builder() {
  
  if (builder_ == NULL) {
    auto* p = CreateMaybeMessage<::manifest::v1::EstafetteBuilder>(GetArenaNoVirtual());
    builder_ = p;
  }
  // @@protoc_insertion_point(field_mutable:manifest.v1.EstafetteManifest.builder)
  return builder_;
}
inline void EstafetteManifest::set_allocated_builder(::manifest::v1::EstafetteBuilder* builder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(builder_);
  }
  if (builder) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      builder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, builder, submessage_arena);
    }
    
  } else {
    
  }
  builder_ = builder;
  // @@protoc_insertion_point(field_set_allocated:manifest.v1.EstafetteManifest.builder)
}

// map<string, string> labels = 2;
inline int EstafetteManifest::labels_size() const {
  return labels_.size();
}
inline void EstafetteManifest::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
EstafetteManifest::labels() const {
  // @@protoc_insertion_point(field_map:manifest.v1.EstafetteManifest.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
EstafetteManifest::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:manifest.v1.EstafetteManifest.labels)
  return labels_.MutableMap();
}

// .manifest.v1.EstafetteVersion version = 3;
inline bool EstafetteManifest::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::manifest::v1::EstafetteVersion& EstafetteManifest::_internal_version() const {
  return *version_;
}
inline const ::manifest::v1::EstafetteVersion& EstafetteManifest::version() const {
  const ::manifest::v1::EstafetteVersion* p = version_;
  // @@protoc_insertion_point(field_get:manifest.v1.EstafetteManifest.version)
  return p != NULL ? *p : *reinterpret_cast<const ::manifest::v1::EstafetteVersion*>(
      &::manifest::v1::_EstafetteVersion_default_instance_);
}
inline ::manifest::v1::EstafetteVersion* EstafetteManifest::release_version() {
  // @@protoc_insertion_point(field_release:manifest.v1.EstafetteManifest.version)
  
  ::manifest::v1::EstafetteVersion* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::manifest::v1::EstafetteVersion* EstafetteManifest::mutable_version() {
  
  if (version_ == NULL) {
    auto* p = CreateMaybeMessage<::manifest::v1::EstafetteVersion>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:manifest.v1.EstafetteManifest.version)
  return version_;
}
inline void EstafetteManifest::set_allocated_version(::manifest::v1::EstafetteVersion* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:manifest.v1.EstafetteManifest.version)
}

// map<string, string> global_env_vars = 4;
inline int EstafetteManifest::global_env_vars_size() const {
  return global_env_vars_.size();
}
inline void EstafetteManifest::clear_global_env_vars() {
  global_env_vars_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
EstafetteManifest::global_env_vars() const {
  // @@protoc_insertion_point(field_map:manifest.v1.EstafetteManifest.global_env_vars)
  return global_env_vars_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
EstafetteManifest::mutable_global_env_vars() {
  // @@protoc_insertion_point(field_mutable_map:manifest.v1.EstafetteManifest.global_env_vars)
  return global_env_vars_.MutableMap();
}

// repeated .manifest.v1.EstafetteTrigger triggers = 5;
inline int EstafetteManifest::triggers_size() const {
  return triggers_.size();
}
inline ::manifest::v1::EstafetteTrigger* EstafetteManifest::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:manifest.v1.EstafetteManifest.triggers)
  return triggers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteTrigger >*
EstafetteManifest::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:manifest.v1.EstafetteManifest.triggers)
  return &triggers_;
}
inline const ::manifest::v1::EstafetteTrigger& EstafetteManifest::triggers(int index) const {
  // @@protoc_insertion_point(field_get:manifest.v1.EstafetteManifest.triggers)
  return triggers_.Get(index);
}
inline ::manifest::v1::EstafetteTrigger* EstafetteManifest::add_triggers() {
  // @@protoc_insertion_point(field_add:manifest.v1.EstafetteManifest.triggers)
  return triggers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteTrigger >&
EstafetteManifest::triggers() const {
  // @@protoc_insertion_point(field_list:manifest.v1.EstafetteManifest.triggers)
  return triggers_;
}

// repeated .manifest.v1.EstafetteStage stages = 6;
inline int EstafetteManifest::stages_size() const {
  return stages_.size();
}
inline ::manifest::v1::EstafetteStage* EstafetteManifest::mutable_stages(int index) {
  // @@protoc_insertion_point(field_mutable:manifest.v1.EstafetteManifest.stages)
  return stages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteStage >*
EstafetteManifest::mutable_stages() {
  // @@protoc_insertion_point(field_mutable_list:manifest.v1.EstafetteManifest.stages)
  return &stages_;
}
inline const ::manifest::v1::EstafetteStage& EstafetteManifest::stages(int index) const {
  // @@protoc_insertion_point(field_get:manifest.v1.EstafetteManifest.stages)
  return stages_.Get(index);
}
inline ::manifest::v1::EstafetteStage* EstafetteManifest::add_stages() {
  // @@protoc_insertion_point(field_add:manifest.v1.EstafetteManifest.stages)
  return stages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteStage >&
EstafetteManifest::stages() const {
  // @@protoc_insertion_point(field_list:manifest.v1.EstafetteManifest.stages)
  return stages_;
}

// repeated .manifest.v1.EstafetteRelease releases = 7;
inline int EstafetteManifest::releases_size() const {
  return releases_.size();
}
inline ::manifest::v1::EstafetteRelease* EstafetteManifest::mutable_releases(int index) {
  // @@protoc_insertion_point(field_mutable:manifest.v1.EstafetteManifest.releases)
  return releases_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteRelease >*
EstafetteManifest::mutable_releases() {
  // @@protoc_insertion_point(field_mutable_list:manifest.v1.EstafetteManifest.releases)
  return &releases_;
}
inline const ::manifest::v1::EstafetteRelease& EstafetteManifest::releases(int index) const {
  // @@protoc_insertion_point(field_get:manifest.v1.EstafetteManifest.releases)
  return releases_.Get(index);
}
inline ::manifest::v1::EstafetteRelease* EstafetteManifest::add_releases() {
  // @@protoc_insertion_point(field_add:manifest.v1.EstafetteManifest.releases)
  return releases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::manifest::v1::EstafetteRelease >&
EstafetteManifest::releases() const {
  // @@protoc_insertion_point(field_list:manifest.v1.EstafetteManifest.releases)
  return releases_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace manifest

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2festafette_5fmanifest_2eproto
