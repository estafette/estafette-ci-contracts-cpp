// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/manifest.v1/string_or_string_array.proto

#ifndef PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto
#define PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto 

namespace protobuf_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto
namespace manifest {
namespace v1 {
class StringOrStringArray;
class StringOrStringArrayDefaultTypeInternal;
extern StringOrStringArrayDefaultTypeInternal _StringOrStringArray_default_instance_;
}  // namespace v1
}  // namespace manifest
namespace google {
namespace protobuf {
template<> ::manifest::v1::StringOrStringArray* Arena::CreateMaybeMessage<::manifest::v1::StringOrStringArray>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace manifest {
namespace v1 {

// ===================================================================

class StringOrStringArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:manifest.v1.StringOrStringArray) */ {
 public:
  StringOrStringArray();
  virtual ~StringOrStringArray();

  StringOrStringArray(const StringOrStringArray& from);

  inline StringOrStringArray& operator=(const StringOrStringArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringOrStringArray(StringOrStringArray&& from) noexcept
    : StringOrStringArray() {
    *this = ::std::move(from);
  }

  inline StringOrStringArray& operator=(StringOrStringArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringOrStringArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringOrStringArray* internal_default_instance() {
    return reinterpret_cast<const StringOrStringArray*>(
               &_StringOrStringArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StringOrStringArray* other);
  friend void swap(StringOrStringArray& a, StringOrStringArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringOrStringArray* New() const final {
    return CreateMaybeMessage<StringOrStringArray>(NULL);
  }

  StringOrStringArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringOrStringArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringOrStringArray& from);
  void MergeFrom(const StringOrStringArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringOrStringArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:manifest.v1.StringOrStringArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringOrStringArray

// repeated string values = 1;
inline int StringOrStringArray::values_size() const {
  return values_.size();
}
inline void StringOrStringArray::clear_values() {
  values_.Clear();
}
inline const ::std::string& StringOrStringArray::values(int index) const {
  // @@protoc_insertion_point(field_get:manifest.v1.StringOrStringArray.values)
  return values_.Get(index);
}
inline ::std::string* StringOrStringArray::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:manifest.v1.StringOrStringArray.values)
  return values_.Mutable(index);
}
inline void StringOrStringArray::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:manifest.v1.StringOrStringArray.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringOrStringArray::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:manifest.v1.StringOrStringArray.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringOrStringArray::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:manifest.v1.StringOrStringArray.values)
}
inline void StringOrStringArray::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manifest.v1.StringOrStringArray.values)
}
inline ::std::string* StringOrStringArray::add_values() {
  // @@protoc_insertion_point(field_add_mutable:manifest.v1.StringOrStringArray.values)
  return values_.Add();
}
inline void StringOrStringArray::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:manifest.v1.StringOrStringArray.values)
}
#if LANG_CXX11
inline void StringOrStringArray::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:manifest.v1.StringOrStringArray.values)
}
#endif
inline void StringOrStringArray::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:manifest.v1.StringOrStringArray.values)
}
inline void StringOrStringArray::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:manifest.v1.StringOrStringArray.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringOrStringArray::values() const {
  // @@protoc_insertion_point(field_list:manifest.v1.StringOrStringArray.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringOrStringArray::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:manifest.v1.StringOrStringArray.values)
  return &values_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace manifest

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fmanifest_2ev1_2fstring_5for_5fstring_5farray_2eproto
