// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contracts.v1/tail_log_line.proto

#include "contracts.v1/tail_log_line.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_contracts_2ev1_2fbuild_5flog_5fline_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_contracts_2ev1_2fbuild_5flog_5fline_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BuildLogLine;
}  // namespace protobuf_contracts_2ev1_2fbuild_5flog_5fline_2eproto
namespace protobuf_contracts_2ev1_2fbuild_5flog_5fstep_5fdocker_5fimage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_contracts_2ev1_2fbuild_5flog_5fstep_5fdocker_5fimage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BuildLogStepDockerImage;
}  // namespace protobuf_contracts_2ev1_2fbuild_5flog_5fstep_5fdocker_5fimage_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace contracts {
namespace v1 {
class TailLogLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TailLogLine>
      _instance;
} _TailLogLine_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto {
static void InitDefaultsTailLogLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::contracts::v1::_TailLogLine_default_instance_;
    new (ptr) ::contracts::v1::TailLogLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::contracts::v1::TailLogLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TailLogLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTailLogLine}, {
      &protobuf_contracts_2ev1_2fbuild_5flog_5fline_2eproto::scc_info_BuildLogLine.base,
      &protobuf_contracts_2ev1_2fbuild_5flog_5fstep_5fdocker_5fimage_2eproto::scc_info_BuildLogStepDockerImage.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TailLogLine.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, log_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, exit_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::TailLogLine, auto_injected_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::contracts::v1::TailLogLine)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::contracts::v1::_TailLogLine_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "contracts.v1/tail_log_line.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n contracts.v1/tail_log_line.proto\022\014cont"
      "racts.v1\032!contracts.v1/build_log_line.pr"
      "oto\032.contracts.v1/build_log_step_docker_"
      "image.proto\032\036google/protobuf/duration.pr"
      "oto\"\346\001\n\013TailLogLine\022\014\n\004step\030\001 \001(\t\022,\n\010log"
      "_line\030\002 \001(\0132\032.contracts.v1.BuildLogLine\022"
      "4\n\005image\030\003 \001(\0132%.contracts.v1.BuildLogSt"
      "epDockerImage\022+\n\010duration\030\004 \001(\0132\031.google"
      ".protobuf.Duration\022\021\n\texit_code\030\005 \001(\003\022\016\n"
      "\006status\030\006 \001(\t\022\025\n\rauto_injected\030\007 \001(\010B\177\n#"
      "io.estafette.ci.protos.contracts.v1Z<git"
      "hub.com/estafette/estafette-ci-protos-go"
      "lang/contracts_v1\252\002\031Estafette.CI.Contrac"
      "ts.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 533);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "contracts.v1/tail_log_line.proto", &protobuf_RegisterTypes);
  ::protobuf_contracts_2ev1_2fbuild_5flog_5fline_2eproto::AddDescriptors();
  ::protobuf_contracts_2ev1_2fbuild_5flog_5fstep_5fdocker_5fimage_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto
namespace contracts {
namespace v1 {

// ===================================================================

void TailLogLine::InitAsDefaultInstance() {
  ::contracts::v1::_TailLogLine_default_instance_._instance.get_mutable()->log_line_ = const_cast< ::contracts::v1::BuildLogLine*>(
      ::contracts::v1::BuildLogLine::internal_default_instance());
  ::contracts::v1::_TailLogLine_default_instance_._instance.get_mutable()->image_ = const_cast< ::contracts::v1::BuildLogStepDockerImage*>(
      ::contracts::v1::BuildLogStepDockerImage::internal_default_instance());
  ::contracts::v1::_TailLogLine_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void TailLogLine::clear_log_line() {
  if (GetArenaNoVirtual() == NULL && log_line_ != NULL) {
    delete log_line_;
  }
  log_line_ = NULL;
}
void TailLogLine::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}
void TailLogLine::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TailLogLine::kStepFieldNumber;
const int TailLogLine::kLogLineFieldNumber;
const int TailLogLine::kImageFieldNumber;
const int TailLogLine::kDurationFieldNumber;
const int TailLogLine::kExitCodeFieldNumber;
const int TailLogLine::kStatusFieldNumber;
const int TailLogLine::kAutoInjectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TailLogLine::TailLogLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto::scc_info_TailLogLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:contracts.v1.TailLogLine)
}
TailLogLine::TailLogLine(const TailLogLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.step().size() > 0) {
    step_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_log_line()) {
    log_line_ = new ::contracts::v1::BuildLogLine(*from.log_line_);
  } else {
    log_line_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::contracts::v1::BuildLogStepDockerImage(*from.image_);
  } else {
    image_ = NULL;
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  ::memcpy(&exit_code_, &from.exit_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&auto_injected_) -
    reinterpret_cast<char*>(&exit_code_)) + sizeof(auto_injected_));
  // @@protoc_insertion_point(copy_constructor:contracts.v1.TailLogLine)
}

void TailLogLine::SharedCtor() {
  step_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_injected_) -
      reinterpret_cast<char*>(&log_line_)) + sizeof(auto_injected_));
}

TailLogLine::~TailLogLine() {
  // @@protoc_insertion_point(destructor:contracts.v1.TailLogLine)
  SharedDtor();
}

void TailLogLine::SharedDtor() {
  step_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete log_line_;
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete duration_;
}

void TailLogLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TailLogLine::descriptor() {
  ::protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TailLogLine& TailLogLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto::scc_info_TailLogLine.base);
  return *internal_default_instance();
}


void TailLogLine::Clear() {
// @@protoc_insertion_point(message_clear_start:contracts.v1.TailLogLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && log_line_ != NULL) {
    delete log_line_;
  }
  log_line_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  ::memset(&exit_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auto_injected_) -
      reinterpret_cast<char*>(&exit_code_)) + sizeof(auto_injected_));
  _internal_metadata_.Clear();
}

bool TailLogLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:contracts.v1.TailLogLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string step = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_step()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->step().data(), static_cast<int>(this->step().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.TailLogLine.step"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.BuildLogLine log_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_log_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .contracts.v1.BuildLogStepDockerImage image = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 exit_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exit_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.TailLogLine.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool auto_injected = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_injected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:contracts.v1.TailLogLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:contracts.v1.TailLogLine)
  return false;
#undef DO_
}

void TailLogLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:contracts.v1.TailLogLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step = 1;
  if (this->step().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step().data(), static_cast<int>(this->step().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.TailLogLine.step");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->step(), output);
  }

  // .contracts.v1.BuildLogLine log_line = 2;
  if (this->has_log_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_log_line(), output);
  }

  // .contracts.v1.BuildLogStepDockerImage image = 3;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_image(), output);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_duration(), output);
  }

  // int64 exit_code = 5;
  if (this->exit_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exit_code(), output);
  }

  // string status = 6;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.TailLogLine.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->status(), output);
  }

  // bool auto_injected = 7;
  if (this->auto_injected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->auto_injected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:contracts.v1.TailLogLine)
}

::google::protobuf::uint8* TailLogLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:contracts.v1.TailLogLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step = 1;
  if (this->step().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step().data(), static_cast<int>(this->step().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.TailLogLine.step");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->step(), target);
  }

  // .contracts.v1.BuildLogLine log_line = 2;
  if (this->has_log_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_log_line(), deterministic, target);
  }

  // .contracts.v1.BuildLogStepDockerImage image = 3;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_image(), deterministic, target);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_duration(), deterministic, target);
  }

  // int64 exit_code = 5;
  if (this->exit_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exit_code(), target);
  }

  // string status = 6;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.TailLogLine.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->status(), target);
  }

  // bool auto_injected = 7;
  if (this->auto_injected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->auto_injected(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:contracts.v1.TailLogLine)
  return target;
}

size_t TailLogLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:contracts.v1.TailLogLine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string step = 1;
  if (this->step().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->step());
  }

  // string status = 6;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // .contracts.v1.BuildLogLine log_line = 2;
  if (this->has_log_line()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *log_line_);
  }

  // .contracts.v1.BuildLogStepDockerImage image = 3;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  // int64 exit_code = 5;
  if (this->exit_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exit_code());
  }

  // bool auto_injected = 7;
  if (this->auto_injected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TailLogLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:contracts.v1.TailLogLine)
  GOOGLE_DCHECK_NE(&from, this);
  const TailLogLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TailLogLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:contracts.v1.TailLogLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:contracts.v1.TailLogLine)
    MergeFrom(*source);
  }
}

void TailLogLine::MergeFrom(const TailLogLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:contracts.v1.TailLogLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.step().size() > 0) {

    step_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_log_line()) {
    mutable_log_line()->::contracts::v1::BuildLogLine::MergeFrom(from.log_line());
  }
  if (from.has_image()) {
    mutable_image()->::contracts::v1::BuildLogStepDockerImage::MergeFrom(from.image());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.exit_code() != 0) {
    set_exit_code(from.exit_code());
  }
  if (from.auto_injected() != 0) {
    set_auto_injected(from.auto_injected());
  }
}

void TailLogLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:contracts.v1.TailLogLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TailLogLine::CopyFrom(const TailLogLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:contracts.v1.TailLogLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailLogLine::IsInitialized() const {
  return true;
}

void TailLogLine::Swap(TailLogLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TailLogLine::InternalSwap(TailLogLine* other) {
  using std::swap;
  step_.Swap(&other->step_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(log_line_, other->log_line_);
  swap(image_, other->image_);
  swap(duration_, other->duration_);
  swap(exit_code_, other->exit_code_);
  swap(auto_injected_, other->auto_injected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TailLogLine::GetMetadata() const {
  protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contracts_2ev1_2ftail_5flog_5fline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::contracts::v1::TailLogLine* Arena::CreateMaybeMessage< ::contracts::v1::TailLogLine >(Arena* arena) {
  return Arena::CreateInternal< ::contracts::v1::TailLogLine >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
