// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contracts.v1/release.proto

#include "contracts.v1/release.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_manifest_2ev1_2festafette_5fevent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_manifest_2ev1_2festafette_5fevent_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_EstafetteEvent;
}  // namespace protobuf_manifest_2ev1_2festafette_5fevent_2eproto
namespace contracts {
namespace v1 {
class ReleaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Release>
      _instance;
} _Release_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace protobuf_contracts_2ev1_2frelease_2eproto {
static void InitDefaultsRelease() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::contracts::v1::_Release_default_instance_;
    new (ptr) ::contracts::v1::Release();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::contracts::v1::Release::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Release =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRelease}, {
      &protobuf_manifest_2ev1_2festafette_5fevent_2eproto::scc_info_EstafetteEvent.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Release.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, repo_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, repo_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, release_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, release_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, inserted_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, updated_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Release, duration_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::contracts::v1::Release)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::contracts::v1::_Release_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "contracts.v1/release.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032contracts.v1/release.proto\022\014contracts."
      "v1\032\036google/protobuf/duration.proto\032\037goog"
      "le/protobuf/timestamp.proto\032!manifest.v1"
      "/estafette_event.proto\"\310\002\n\007Release\022\014\n\004na"
      "me\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\022\023\n\013"
      "repo_source\030\004 \001(\t\022\022\n\nrepo_owner\030\005 \001(\t\022\027\n"
      "\017release_version\030\006 \001(\t\022\026\n\016release_status"
      "\030\007 \001(\t\022+\n\006events\030\010 \003(\0132\033.manifest.v1.Est"
      "afetteEvent\022/\n\013inserted_at\030\t \001(\0132\032.googl"
      "e.protobuf.Timestamp\022.\n\nupdated_at\030\n \001(\013"
      "2\032.google.protobuf.Timestamp\022+\n\010duration"
      "\030\013 \001(\0132\031.google.protobuf.DurationB\177\n#io."
      "estafette.ci.protos.contracts.v1Z<github"
      ".com/estafette/estafette-ci-protos-golan"
      "g/contracts_v1\252\002\031Estafette.CI.Contracts."
      "V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 610);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "contracts.v1/release.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_manifest_2ev1_2festafette_5fevent_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_contracts_2ev1_2frelease_2eproto
namespace contracts {
namespace v1 {

// ===================================================================

void Release::InitAsDefaultInstance() {
  ::contracts::v1::_Release_default_instance_._instance.get_mutable()->inserted_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::contracts::v1::_Release_default_instance_._instance.get_mutable()->updated_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::contracts::v1::_Release_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Release::clear_events() {
  events_.Clear();
}
void Release::clear_inserted_at() {
  if (GetArenaNoVirtual() == NULL && inserted_at_ != NULL) {
    delete inserted_at_;
  }
  inserted_at_ = NULL;
}
void Release::clear_updated_at() {
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
}
void Release::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Release::kNameFieldNumber;
const int Release::kActionFieldNumber;
const int Release::kIdFieldNumber;
const int Release::kRepoSourceFieldNumber;
const int Release::kRepoOwnerFieldNumber;
const int Release::kReleaseVersionFieldNumber;
const int Release::kReleaseStatusFieldNumber;
const int Release::kEventsFieldNumber;
const int Release::kInsertedAtFieldNumber;
const int Release::kUpdatedAtFieldNumber;
const int Release::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Release::Release()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_contracts_2ev1_2frelease_2eproto::scc_info_Release.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:contracts.v1.Release)
}
Release::Release(const Release& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  repo_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_source().size() > 0) {
    repo_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_source_);
  }
  repo_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_owner().size() > 0) {
    repo_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_owner_);
  }
  release_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.release_version().size() > 0) {
    release_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_version_);
  }
  release_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.release_status().size() > 0) {
    release_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_status_);
  }
  if (from.has_inserted_at()) {
    inserted_at_ = new ::google::protobuf::Timestamp(*from.inserted_at_);
  } else {
    inserted_at_ = NULL;
  }
  if (from.has_updated_at()) {
    updated_at_ = new ::google::protobuf::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = NULL;
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:contracts.v1.Release)
}

void Release::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inserted_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&inserted_at_)) + sizeof(duration_));
}

Release::~Release() {
  // @@protoc_insertion_point(destructor:contracts.v1.Release)
  SharedDtor();
}

void Release::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inserted_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete duration_;
}

void Release::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Release::descriptor() {
  ::protobuf_contracts_2ev1_2frelease_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contracts_2ev1_2frelease_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Release& Release::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_contracts_2ev1_2frelease_2eproto::scc_info_Release.base);
  return *internal_default_instance();
}


void Release::Clear() {
// @@protoc_insertion_point(message_clear_start:contracts.v1.Release)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && inserted_at_ != NULL) {
    delete inserted_at_;
  }
  inserted_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  _internal_metadata_.Clear();
}

bool Release::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:contracts.v1.Release)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_source().data(), static_cast<int>(this->repo_source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.repo_source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_owner = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.repo_owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string release_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_release_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->release_version().data(), static_cast<int>(this->release_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.release_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string release_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_release_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->release_status().data(), static_cast<int>(this->release_status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "contracts.v1.Release.release_status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .manifest.v1.EstafetteEvent events = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp inserted_at = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inserted_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp updated_at = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:contracts.v1.Release)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:contracts.v1.Release)
  return false;
#undef DO_
}

void Release::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:contracts.v1.Release)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->action(), output);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // string repo_source = 4;
  if (this->repo_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_source().data(), static_cast<int>(this->repo_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.repo_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->repo_source(), output);
  }

  // string repo_owner = 5;
  if (this->repo_owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.repo_owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->repo_owner(), output);
  }

  // string release_version = 6;
  if (this->release_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_version().data(), static_cast<int>(this->release_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.release_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->release_version(), output);
  }

  // string release_status = 7;
  if (this->release_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_status().data(), static_cast<int>(this->release_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.release_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->release_status(), output);
  }

  // repeated .manifest.v1.EstafetteEvent events = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->events(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Timestamp inserted_at = 9;
  if (this->has_inserted_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_inserted_at(), output);
  }

  // .google.protobuf.Timestamp updated_at = 10;
  if (this->has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_updated_at(), output);
  }

  // .google.protobuf.Duration duration = 11;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:contracts.v1.Release)
}

::google::protobuf::uint8* Release::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:contracts.v1.Release)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->action(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // string repo_source = 4;
  if (this->repo_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_source().data(), static_cast<int>(this->repo_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.repo_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->repo_source(), target);
  }

  // string repo_owner = 5;
  if (this->repo_owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_owner().data(), static_cast<int>(this->repo_owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.repo_owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->repo_owner(), target);
  }

  // string release_version = 6;
  if (this->release_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_version().data(), static_cast<int>(this->release_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.release_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->release_version(), target);
  }

  // string release_status = 7;
  if (this->release_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_status().data(), static_cast<int>(this->release_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "contracts.v1.Release.release_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->release_status(), target);
  }

  // repeated .manifest.v1.EstafetteEvent events = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->events(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp inserted_at = 9;
  if (this->has_inserted_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_inserted_at(), deterministic, target);
  }

  // .google.protobuf.Timestamp updated_at = 10;
  if (this->has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_updated_at(), deterministic, target);
  }

  // .google.protobuf.Duration duration = 11;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_duration(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:contracts.v1.Release)
  return target;
}

size_t Release::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:contracts.v1.Release)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .manifest.v1.EstafetteEvent events = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string repo_source = 4;
  if (this->repo_source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_source());
  }

  // string repo_owner = 5;
  if (this->repo_owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_owner());
  }

  // string release_version = 6;
  if (this->release_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->release_version());
  }

  // string release_status = 7;
  if (this->release_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->release_status());
  }

  // .google.protobuf.Timestamp inserted_at = 9;
  if (this->has_inserted_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inserted_at_);
  }

  // .google.protobuf.Timestamp updated_at = 10;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .google.protobuf.Duration duration = 11;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Release::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:contracts.v1.Release)
  GOOGLE_DCHECK_NE(&from, this);
  const Release* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Release>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:contracts.v1.Release)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:contracts.v1.Release)
    MergeFrom(*source);
  }
}

void Release::MergeFrom(const Release& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:contracts.v1.Release)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.repo_source().size() > 0) {

    repo_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_source_);
  }
  if (from.repo_owner().size() > 0) {

    repo_owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_owner_);
  }
  if (from.release_version().size() > 0) {

    release_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_version_);
  }
  if (from.release_status().size() > 0) {

    release_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_status_);
  }
  if (from.has_inserted_at()) {
    mutable_inserted_at()->::google::protobuf::Timestamp::MergeFrom(from.inserted_at());
  }
  if (from.has_updated_at()) {
    mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(from.updated_at());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
}

void Release::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:contracts.v1.Release)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Release::CopyFrom(const Release& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:contracts.v1.Release)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Release::IsInitialized() const {
  return true;
}

void Release::Swap(Release* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Release::InternalSwap(Release* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  action_.Swap(&other->action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_source_.Swap(&other->repo_source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_owner_.Swap(&other->repo_owner_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  release_version_.Swap(&other->release_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  release_status_.Swap(&other->release_status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inserted_at_, other->inserted_at_);
  swap(updated_at_, other->updated_at_);
  swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Release::GetMetadata() const {
  protobuf_contracts_2ev1_2frelease_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contracts_2ev1_2frelease_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::contracts::v1::Release* Arena::CreateMaybeMessage< ::contracts::v1::Release >(Arena* arena) {
  return Arena::CreateInternal< ::contracts::v1::Release >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
