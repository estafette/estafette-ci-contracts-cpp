// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contracts.v1/pagination.proto

#include "contracts.v1/pagination.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace contracts {
namespace v1 {
class PaginationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pagination>
      _instance;
} _Pagination_default_instance_;
}  // namespace v1
}  // namespace contracts
namespace protobuf_contracts_2ev1_2fpagination_2eproto {
static void InitDefaultsPagination() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::contracts::v1::_Pagination_default_instance_;
    new (ptr) ::contracts::v1::Pagination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::contracts::v1::Pagination::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pagination =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPagination}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Pagination.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Pagination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Pagination, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Pagination, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Pagination, total_pages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::contracts::v1::Pagination, total_items_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::contracts::v1::Pagination)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::contracts::v1::_Pagination_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "contracts.v1/pagination.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035contracts.v1/pagination.proto\022\014contrac"
      "ts.v1\"R\n\nPagination\022\014\n\004page\030\001 \001(\003\022\014\n\004siz"
      "e\030\002 \001(\003\022\023\n\013total_pages\030\003 \001(\003\022\023\n\013total_it"
      "ems\030\004 \001(\003B]Z\?github.com/estafette/estafe"
      "tte-ci-contracts-golang/contracts_v1\252\002\031E"
      "stafette.CI.Contracts.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 232);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "contracts.v1/pagination.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_contracts_2ev1_2fpagination_2eproto
namespace contracts {
namespace v1 {

// ===================================================================

void Pagination::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pagination::kPageFieldNumber;
const int Pagination::kSizeFieldNumber;
const int Pagination::kTotalPagesFieldNumber;
const int Pagination::kTotalItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pagination::Pagination()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_contracts_2ev1_2fpagination_2eproto::scc_info_Pagination.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:contracts.v1.Pagination)
}
Pagination::Pagination(const Pagination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_, &from.page_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_items_) -
    reinterpret_cast<char*>(&page_)) + sizeof(total_items_));
  // @@protoc_insertion_point(copy_constructor:contracts.v1.Pagination)
}

void Pagination::SharedCtor() {
  ::memset(&page_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_items_) -
      reinterpret_cast<char*>(&page_)) + sizeof(total_items_));
}

Pagination::~Pagination() {
  // @@protoc_insertion_point(destructor:contracts.v1.Pagination)
  SharedDtor();
}

void Pagination::SharedDtor() {
}

void Pagination::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pagination::descriptor() {
  ::protobuf_contracts_2ev1_2fpagination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contracts_2ev1_2fpagination_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pagination& Pagination::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_contracts_2ev1_2fpagination_2eproto::scc_info_Pagination.base);
  return *internal_default_instance();
}


void Pagination::Clear() {
// @@protoc_insertion_point(message_clear_start:contracts.v1.Pagination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&page_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_items_) -
      reinterpret_cast<char*>(&page_)) + sizeof(total_items_));
  _internal_metadata_.Clear();
}

bool Pagination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:contracts.v1.Pagination)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 page = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_pages = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_pages_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:contracts.v1.Pagination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:contracts.v1.Pagination)
  return false;
#undef DO_
}

void Pagination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:contracts.v1.Pagination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 page = 1;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->page(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // int64 total_pages = 3;
  if (this->total_pages() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total_pages(), output);
  }

  // int64 total_items = 4;
  if (this->total_items() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->total_items(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:contracts.v1.Pagination)
}

::google::protobuf::uint8* Pagination::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:contracts.v1.Pagination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 page = 1;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->page(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  // int64 total_pages = 3;
  if (this->total_pages() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total_pages(), target);
  }

  // int64 total_items = 4;
  if (this->total_items() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->total_items(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:contracts.v1.Pagination)
  return target;
}

size_t Pagination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:contracts.v1.Pagination)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 page = 1;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->page());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // int64 total_pages = 3;
  if (this->total_pages() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_pages());
  }

  // int64 total_items = 4;
  if (this->total_items() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_items());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pagination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:contracts.v1.Pagination)
  GOOGLE_DCHECK_NE(&from, this);
  const Pagination* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pagination>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:contracts.v1.Pagination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:contracts.v1.Pagination)
    MergeFrom(*source);
  }
}

void Pagination::MergeFrom(const Pagination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:contracts.v1.Pagination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page() != 0) {
    set_page(from.page());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.total_pages() != 0) {
    set_total_pages(from.total_pages());
  }
  if (from.total_items() != 0) {
    set_total_items(from.total_items());
  }
}

void Pagination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:contracts.v1.Pagination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pagination::CopyFrom(const Pagination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:contracts.v1.Pagination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pagination::IsInitialized() const {
  return true;
}

void Pagination::Swap(Pagination* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pagination::InternalSwap(Pagination* other) {
  using std::swap;
  swap(page_, other->page_);
  swap(size_, other->size_);
  swap(total_pages_, other->total_pages_);
  swap(total_items_, other->total_items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pagination::GetMetadata() const {
  protobuf_contracts_2ev1_2fpagination_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_contracts_2ev1_2fpagination_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contracts
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::contracts::v1::Pagination* Arena::CreateMaybeMessage< ::contracts::v1::Pagination >(Arena* arena) {
  return Arena::CreateInternal< ::contracts::v1::Pagination >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
